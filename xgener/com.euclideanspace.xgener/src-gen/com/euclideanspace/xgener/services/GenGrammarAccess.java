/*
* generated by Xtext
*/
package com.euclideanspace.xgener.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class GenGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cClasAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cClasClassTypeParserRuleCall_0_0 = (RuleCall)cClasAssignment_0.eContents().get(0);
		private final Assignment cProcAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cProcProcedureParserRuleCall_1_0 = (RuleCall)cProcAssignment_1.eContents().get(0);
		private final Assignment cPrimAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cPrimPrimaryParserRuleCall_2_0 = (RuleCall)cPrimAssignment_2.eContents().get(0);
		private final Assignment cLitAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cLitLiteralParserRuleCall_3_0 = (RuleCall)cLitAssignment_3.eContents().get(0);
		private final Assignment cExpAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cExpExpressionParserRuleCall_4_0 = (RuleCall)cExpAssignment_4.eContents().get(0);
		
		//Model:
		//	(clas+=ClassType | proc+=Procedure | prim+=Primary | lit+=Literal | exp+=Expression)*;
		public ParserRule getRule() { return rule; }

		//(clas+=ClassType | proc+=Procedure | prim+=Primary | lit+=Literal | exp+=Expression)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//clas+=ClassType
		public Assignment getClasAssignment_0() { return cClasAssignment_0; }

		//ClassType
		public RuleCall getClasClassTypeParserRuleCall_0_0() { return cClasClassTypeParserRuleCall_0_0; }

		//proc+=Procedure
		public Assignment getProcAssignment_1() { return cProcAssignment_1; }

		//Procedure
		public RuleCall getProcProcedureParserRuleCall_1_0() { return cProcProcedureParserRuleCall_1_0; }

		//prim+=Primary
		public Assignment getPrimAssignment_2() { return cPrimAssignment_2; }

		//Primary
		public RuleCall getPrimPrimaryParserRuleCall_2_0() { return cPrimPrimaryParserRuleCall_2_0; }

		//lit+=Literal
		public Assignment getLitAssignment_3() { return cLitAssignment_3; }

		//Literal
		public RuleCall getLitLiteralParserRuleCall_3_0() { return cLitLiteralParserRuleCall_3_0; }

		//exp+=Expression
		public Assignment getExpAssignment_4() { return cExpAssignment_4; }

		//Expression
		public RuleCall getExpExpressionParserRuleCall_4_0() { return cExpExpressionParserRuleCall_4_0; }
	}

	public class ClassTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCLASSKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Assignment cNoclassAssignment_2_0 = (Assignment)cAlternatives_2.eContents().get(0);
		private final Keyword cNoclassNOCLASSKeyword_2_0_0 = (Keyword)cNoclassAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cPREFIXKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cPrefixAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cPrefixMultIDParserRuleCall_2_1_1_0 = (RuleCall)cPrefixAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Keyword cSUFFIXKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cSuffixAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cSuffixMultIDParserRuleCall_2_2_1_0 = (RuleCall)cSuffixAssignment_2_2_1.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cAlternatives_2.eContents().get(3);
		private final Keyword cBLOCKINGKeyword_2_3_0 = (Keyword)cGroup_2_3.eContents().get(0);
		private final Assignment cBlockingAssignment_2_3_1 = (Assignment)cGroup_2_3.eContents().get(1);
		private final Alternatives cBlockingAlternatives_2_3_1_0 = (Alternatives)cBlockingAssignment_2_3_1.eContents().get(0);
		private final Keyword cBlockingBRACESKeyword_2_3_1_0_0 = (Keyword)cBlockingAlternatives_2_3_1_0.eContents().get(0);
		private final Keyword cBlockingINDENTKeyword_2_3_1_0_1 = (Keyword)cBlockingAlternatives_2_3_1_0.eContents().get(1);
		
		//ClassType:
		//	"CLASS" name=ID (noclass+="NOCLASS" | "PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "BLOCKING"
		//	blocking+=("BRACES" | "INDENT"))*;
		public ParserRule getRule() { return rule; }

		//"CLASS" name=ID (noclass+="NOCLASS" | "PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "BLOCKING" blocking+=("BRACES"
		//| "INDENT"))*
		public Group getGroup() { return cGroup; }

		//"CLASS"
		public Keyword getCLASSKeyword_0() { return cCLASSKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//(noclass+="NOCLASS" | "PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "BLOCKING" blocking+=("BRACES" | "INDENT"))*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//noclass+="NOCLASS"
		public Assignment getNoclassAssignment_2_0() { return cNoclassAssignment_2_0; }

		//"NOCLASS"
		public Keyword getNoclassNOCLASSKeyword_2_0_0() { return cNoclassNOCLASSKeyword_2_0_0; }

		//"PREFIX" prefix+=MultID
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"PREFIX"
		public Keyword getPREFIXKeyword_2_1_0() { return cPREFIXKeyword_2_1_0; }

		//prefix+=MultID
		public Assignment getPrefixAssignment_2_1_1() { return cPrefixAssignment_2_1_1; }

		//MultID
		public RuleCall getPrefixMultIDParserRuleCall_2_1_1_0() { return cPrefixMultIDParserRuleCall_2_1_1_0; }

		//"SUFFIX" suffix+=MultID
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"SUFFIX"
		public Keyword getSUFFIXKeyword_2_2_0() { return cSUFFIXKeyword_2_2_0; }

		//suffix+=MultID
		public Assignment getSuffixAssignment_2_2_1() { return cSuffixAssignment_2_2_1; }

		//MultID
		public RuleCall getSuffixMultIDParserRuleCall_2_2_1_0() { return cSuffixMultIDParserRuleCall_2_2_1_0; }

		//"BLOCKING" blocking+=("BRACES" | "INDENT")
		public Group getGroup_2_3() { return cGroup_2_3; }

		//"BLOCKING"
		public Keyword getBLOCKINGKeyword_2_3_0() { return cBLOCKINGKeyword_2_3_0; }

		//blocking+=("BRACES" | "INDENT")
		public Assignment getBlockingAssignment_2_3_1() { return cBlockingAssignment_2_3_1; }

		//"BRACES" | "INDENT"
		public Alternatives getBlockingAlternatives_2_3_1_0() { return cBlockingAlternatives_2_3_1_0; }

		//"BRACES"
		public Keyword getBlockingBRACESKeyword_2_3_1_0_0() { return cBlockingBRACESKeyword_2_3_1_0_0; }

		//"INDENT"
		public Keyword getBlockingINDENTKeyword_2_3_1_0_1() { return cBlockingINDENTKeyword_2_3_1_0_1; }
	}

	public class ProcedureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Procedure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPROCEDUREKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cPREFIXKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cPrefixAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cPrefixMultIDParserRuleCall_2_0_1_0 = (RuleCall)cPrefixAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cSUFFIXKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cSuffixAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cSuffixMultIDParserRuleCall_2_1_1_0 = (RuleCall)cSuffixAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cAlternatives_2.eContents().get(2);
		private final Keyword cTYPESKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cTypesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final Alternatives cTypesAlternatives_2_2_1_0 = (Alternatives)cTypesAssignment_2_2_1.eContents().get(0);
		private final Keyword cTypesCOLONSEPERATEDKeyword_2_2_1_0_0 = (Keyword)cTypesAlternatives_2_2_1_0.eContents().get(0);
		private final Keyword cTypesSPACESEPERATEDKeyword_2_2_1_0_1 = (Keyword)cTypesAlternatives_2_2_1_0.eContents().get(1);
		private final Keyword cTypesINHEADERKeyword_2_2_1_0_2 = (Keyword)cTypesAlternatives_2_2_1_0.eContents().get(2);
		private final Keyword cTypesINFERREDKeyword_2_2_1_0_3 = (Keyword)cTypesAlternatives_2_2_1_0.eContents().get(3);
		private final Keyword cTypesUNTYPEDKeyword_2_2_1_0_4 = (Keyword)cTypesAlternatives_2_2_1_0.eContents().get(4);
		
		//Procedure:
		//	"PROCEDURE" name=ID ("PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "TYPES" types+=("COLONSEPERATED" |
		//	"SPACESEPERATED" | "INHEADER" | "INFERRED" | "UNTYPED"))*;
		public ParserRule getRule() { return rule; }

		//"PROCEDURE" name=ID ("PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "TYPES" types+=("COLONSEPERATED" |
		//"SPACESEPERATED" | "INHEADER" | "INFERRED" | "UNTYPED"))*
		public Group getGroup() { return cGroup; }

		//"PROCEDURE"
		public Keyword getPROCEDUREKeyword_0() { return cPROCEDUREKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//("PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "TYPES" types+=("COLONSEPERATED" | "SPACESEPERATED" | "INHEADER" |
		//"INFERRED" | "UNTYPED"))*
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//"PREFIX" prefix+=MultID
		public Group getGroup_2_0() { return cGroup_2_0; }

		//"PREFIX"
		public Keyword getPREFIXKeyword_2_0_0() { return cPREFIXKeyword_2_0_0; }

		//prefix+=MultID
		public Assignment getPrefixAssignment_2_0_1() { return cPrefixAssignment_2_0_1; }

		//MultID
		public RuleCall getPrefixMultIDParserRuleCall_2_0_1_0() { return cPrefixMultIDParserRuleCall_2_0_1_0; }

		//"SUFFIX" suffix+=MultID
		public Group getGroup_2_1() { return cGroup_2_1; }

		//"SUFFIX"
		public Keyword getSUFFIXKeyword_2_1_0() { return cSUFFIXKeyword_2_1_0; }

		//suffix+=MultID
		public Assignment getSuffixAssignment_2_1_1() { return cSuffixAssignment_2_1_1; }

		//MultID
		public RuleCall getSuffixMultIDParserRuleCall_2_1_1_0() { return cSuffixMultIDParserRuleCall_2_1_1_0; }

		//"TYPES" types+=("COLONSEPERATED" | "SPACESEPERATED" | "INHEADER" | "INFERRED" | "UNTYPED")
		public Group getGroup_2_2() { return cGroup_2_2; }

		//"TYPES"
		public Keyword getTYPESKeyword_2_2_0() { return cTYPESKeyword_2_2_0; }

		//types+=("COLONSEPERATED" | "SPACESEPERATED" | "INHEADER" | "INFERRED" | "UNTYPED")
		public Assignment getTypesAssignment_2_2_1() { return cTypesAssignment_2_2_1; }

		//"COLONSEPERATED" | "SPACESEPERATED" | "INHEADER" | "INFERRED" | "UNTYPED"
		public Alternatives getTypesAlternatives_2_2_1_0() { return cTypesAlternatives_2_2_1_0; }

		//"COLONSEPERATED"
		public Keyword getTypesCOLONSEPERATEDKeyword_2_2_1_0_0() { return cTypesCOLONSEPERATEDKeyword_2_2_1_0_0; }

		//"SPACESEPERATED"
		public Keyword getTypesSPACESEPERATEDKeyword_2_2_1_0_1() { return cTypesSPACESEPERATEDKeyword_2_2_1_0_1; }

		//"INHEADER"
		public Keyword getTypesINHEADERKeyword_2_2_1_0_2() { return cTypesINHEADERKeyword_2_2_1_0_2; }

		//"INFERRED"
		public Keyword getTypesINFERREDKeyword_2_2_1_0_3() { return cTypesINFERREDKeyword_2_2_1_0_3; }

		//"UNTYPED"
		public Keyword getTypesUNTYPEDKeyword_2_2_1_0_4() { return cTypesUNTYPEDKeyword_2_2_1_0_4; }
	}

	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Expression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEXPRESSIONKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cPrecAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPrecPrecedenceParserRuleCall_2_0 = (RuleCall)cPrecAssignment_2.eContents().get(0);
		
		//Expression:
		//	"EXPRESSION" name=ID prec+=Precedence*;
		public ParserRule getRule() { return rule; }

		//"EXPRESSION" name=ID prec+=Precedence*
		public Group getGroup() { return cGroup; }

		//"EXPRESSION"
		public Keyword getEXPRESSIONKeyword_0() { return cEXPRESSIONKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//prec+=Precedence*
		public Assignment getPrecAssignment_2() { return cPrecAssignment_2; }

		//Precedence
		public RuleCall getPrecPrecedenceParserRuleCall_2_0() { return cPrecPrecedenceParserRuleCall_2_0; }
	}

	public class PrecedenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Precedence");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cRuletypAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cRuletypCALLERKeyword_0_0_0 = (Keyword)cRuletypAssignment_0_0.eContents().get(0);
		private final Assignment cRuleAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_0_1_0 = (RuleCall)cRuleAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cFullStopKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Assignment cFeature1Assignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cFeature1IDTerminalRuleCall_0_2_1_0 = (RuleCall)cFeature1Assignment_0_2_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cRuletypAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cRuletypPREFIXKeyword_1_0_0 = (Keyword)cRuletypAssignment_1_0.eContents().get(0);
		private final Assignment cRuleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_1_1_0 = (RuleCall)cRuleAssignment_1_1.eContents().get(0);
		private final Assignment cPrefixAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cPrefixMultStringParserRuleCall_1_2_0 = (RuleCall)cPrefixAssignment_1_2.eContents().get(0);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final Assignment cFeature1Assignment_1_3_0 = (Assignment)cGroup_1_3.eContents().get(0);
		private final RuleCall cFeature1IDTerminalRuleCall_1_3_0_0 = (RuleCall)cFeature1Assignment_1_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_3_1 = (Keyword)cGroup_1_3.eContents().get(1);
		private final Assignment cPar1Assignment_1_4 = (Assignment)cGroup_1.eContents().get(4);
		private final RuleCall cPar1IDTerminalRuleCall_1_4_0 = (RuleCall)cPar1Assignment_1_4.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cRuletypAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cRuletypSUFFIXKeyword_2_0_0 = (Keyword)cRuletypAssignment_2_0.eContents().get(0);
		private final Assignment cRuleAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_2_1_0 = (RuleCall)cRuleAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Assignment cFeature1Assignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final RuleCall cFeature1IDTerminalRuleCall_2_2_0_0 = (RuleCall)cFeature1Assignment_2_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_2_1 = (Keyword)cGroup_2_2.eContents().get(1);
		private final Assignment cPar1Assignment_2_3 = (Assignment)cGroup_2.eContents().get(3);
		private final RuleCall cPar1IDTerminalRuleCall_2_3_0 = (RuleCall)cPar1Assignment_2_3.eContents().get(0);
		private final Assignment cSuffixAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cSuffixMultStringParserRuleCall_2_4_0 = (RuleCall)cSuffixAssignment_2_4.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cRuletypAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cRuletypINFIXKeyword_3_0_0 = (Keyword)cRuletypAssignment_3_0.eContents().get(0);
		private final Assignment cRuleAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_3_1_0 = (RuleCall)cRuleAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Assignment cFeature1Assignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final RuleCall cFeature1IDTerminalRuleCall_3_2_0_0 = (RuleCall)cFeature1Assignment_3_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cPar1Assignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cPar1IDTerminalRuleCall_3_3_0 = (RuleCall)cPar1Assignment_3_3.eContents().get(0);
		private final Assignment cInfixAssignment_3_4 = (Assignment)cGroup_3.eContents().get(4);
		private final RuleCall cInfixMultStringParserRuleCall_3_4_0 = (RuleCall)cInfixAssignment_3_4.eContents().get(0);
		private final Group cGroup_3_5 = (Group)cGroup_3.eContents().get(5);
		private final Assignment cFeature2Assignment_3_5_0 = (Assignment)cGroup_3_5.eContents().get(0);
		private final RuleCall cFeature2IDTerminalRuleCall_3_5_0_0 = (RuleCall)cFeature2Assignment_3_5_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_5_1 = (Keyword)cGroup_3_5.eContents().get(1);
		private final Assignment cPar2Assignment_3_6 = (Assignment)cGroup_3.eContents().get(6);
		private final RuleCall cPar2IDTerminalRuleCall_3_6_0 = (RuleCall)cPar2Assignment_3_6.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cRuletypAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cRuletypOUTERKeyword_4_0_0 = (Keyword)cRuletypAssignment_4_0.eContents().get(0);
		private final Assignment cRuleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_4_1_0 = (RuleCall)cRuleAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Assignment cFeature1Assignment_4_2_0 = (Assignment)cGroup_4_2.eContents().get(0);
		private final RuleCall cFeature1IDTerminalRuleCall_4_2_0_0 = (RuleCall)cFeature1Assignment_4_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cPar1Assignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cPar1IDTerminalRuleCall_4_3_0 = (RuleCall)cPar1Assignment_4_3.eContents().get(0);
		private final Assignment cInnerAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final RuleCall cInnerInnerPrecedenceParserRuleCall_4_4_0 = (RuleCall)cInnerAssignment_4_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cRuletypAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cRuletypINFIXLEFTKeyword_5_0_0 = (Keyword)cRuletypAssignment_5_0.eContents().get(0);
		private final Assignment cRuleAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_5_1_0 = (RuleCall)cRuleAssignment_5_1.eContents().get(0);
		private final Assignment cPar1Assignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cPar1IDTerminalRuleCall_5_2_0 = (RuleCall)cPar1Assignment_5_2.eContents().get(0);
		private final Assignment cInfixleftAssignment_5_3 = (Assignment)cGroup_5.eContents().get(3);
		private final RuleCall cInfixleftMultStringParserRuleCall_5_3_0 = (RuleCall)cInfixleftAssignment_5_3.eContents().get(0);
		private final Assignment cPar2Assignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cPar2IDTerminalRuleCall_5_4_0 = (RuleCall)cPar2Assignment_5_4.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cRuletypAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cRuletypBRACKETKeyword_6_0_0 = (Keyword)cRuletypAssignment_6_0.eContents().get(0);
		private final Assignment cRuleAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_6_1_0 = (RuleCall)cRuleAssignment_6_1.eContents().get(0);
		private final Assignment cBracketAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cBracketIDTerminalRuleCall_6_2_0 = (RuleCall)cBracketAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cRuletypAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cRuletypBRACESKeyword_7_0_0 = (Keyword)cRuletypAssignment_7_0.eContents().get(0);
		private final Assignment cRuleAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_7_1_0 = (RuleCall)cRuleAssignment_7_1.eContents().get(0);
		private final Assignment cBracesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cBracesIDTerminalRuleCall_7_2_0 = (RuleCall)cBracesAssignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cRuletypAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cRuletypPARENTHESISKeyword_8_0_0 = (Keyword)cRuletypAssignment_8_0.eContents().get(0);
		private final Assignment cRuleAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_8_1_0 = (RuleCall)cRuleAssignment_8_1.eContents().get(0);
		private final Assignment cParenthesisAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cParenthesisIDTerminalRuleCall_8_2_0 = (RuleCall)cParenthesisAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cRuletypAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cRuletypANGLEKeyword_9_0_0 = (Keyword)cRuletypAssignment_9_0.eContents().get(0);
		private final Assignment cRuleAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_9_1_0 = (RuleCall)cRuleAssignment_9_1.eContents().get(0);
		private final Assignment cAngleAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cAngleIDTerminalRuleCall_9_2_0 = (RuleCall)cAngleAssignment_9_2.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cRuletypAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cRuletypMEMBERFEATUREKeyword_10_0_0 = (Keyword)cRuletypAssignment_10_0.eContents().get(0);
		private final Assignment cRuleAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_10_1_0 = (RuleCall)cRuleAssignment_10_1.eContents().get(0);
		private final Group cGroup_10_2 = (Group)cGroup_10.eContents().get(2);
		private final Assignment cFeature1Assignment_10_2_0 = (Assignment)cGroup_10_2.eContents().get(0);
		private final RuleCall cFeature1IDTerminalRuleCall_10_2_0_0 = (RuleCall)cFeature1Assignment_10_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_2_1 = (Keyword)cGroup_10_2.eContents().get(1);
		private final Assignment cPar1Assignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cPar1IDTerminalRuleCall_10_3_0 = (RuleCall)cPar1Assignment_10_3.eContents().get(0);
		private final Assignment cInfixAssignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cInfixMultStringParserRuleCall_10_4_0 = (RuleCall)cInfixAssignment_10_4.eContents().get(0);
		private final Group cGroup_10_5 = (Group)cGroup_10.eContents().get(5);
		private final Assignment cFeature2Assignment_10_5_0 = (Assignment)cGroup_10_5.eContents().get(0);
		private final RuleCall cFeature2IDTerminalRuleCall_10_5_0_0 = (RuleCall)cFeature2Assignment_10_5_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_5_1 = (Keyword)cGroup_10_5.eContents().get(1);
		private final Assignment cPar2Assignment_10_6 = (Assignment)cGroup_10.eContents().get(6);
		private final RuleCall cPar2IDTerminalRuleCall_10_6_0 = (RuleCall)cPar2Assignment_10_6.eContents().get(0);
		
		/// * make this rule separate from Expression so prefix,suffix,infix.... can be
		// * in the same list in any order
		// * / Precedence:
		//	ruletyp="CALLER" rule=ID ("." feature1=ID)? | ruletyp="PREFIX" rule=ID prefix=MultString (feature1=ID "=")? par1=ID |
		//	ruletyp="SUFFIX" rule=ID (feature1=ID "=")? par1=ID suffix=MultString | ruletyp="INFIX" rule=ID (feature1=ID "=")?
		//	par1=ID infix=MultString (feature2=ID "=")? par2=ID | ruletyp="OUTER" rule=ID (feature1=ID "=")? par1=ID
		//	inner+=InnerPrecedence+ | ruletyp="INFIXLEFT" rule=ID par1=ID infixleft=MultString par2=ID | ruletyp="BRACKET" rule=ID
		//	bracket=ID | ruletyp="BRACES" rule=ID braces=ID | ruletyp="PARENTHESIS" rule=ID parenthesis=ID | ruletyp="ANGLE"
		//	rule=ID angle=ID | ruletyp="MEMBERFEATURE" rule=ID (feature1=ID "=")? par1=ID infix=MultString (feature2=ID "=")?
		//	par2=ID;
		public ParserRule getRule() { return rule; }

		//ruletyp="CALLER" rule=ID ("." feature1=ID)? | ruletyp="PREFIX" rule=ID prefix=MultString (feature1=ID "=")? par1=ID |
		//ruletyp="SUFFIX" rule=ID (feature1=ID "=")? par1=ID suffix=MultString | ruletyp="INFIX" rule=ID (feature1=ID "=")?
		//par1=ID infix=MultString (feature2=ID "=")? par2=ID | ruletyp="OUTER" rule=ID (feature1=ID "=")? par1=ID
		//inner+=InnerPrecedence+ | ruletyp="INFIXLEFT" rule=ID par1=ID infixleft=MultString par2=ID | ruletyp="BRACKET" rule=ID
		//bracket=ID | ruletyp="BRACES" rule=ID braces=ID | ruletyp="PARENTHESIS" rule=ID parenthesis=ID | ruletyp="ANGLE"
		//rule=ID angle=ID | ruletyp="MEMBERFEATURE" rule=ID (feature1=ID "=")? par1=ID infix=MultString (feature2=ID "=")?
		//par2=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//ruletyp="CALLER" rule=ID ("." feature1=ID)?
		public Group getGroup_0() { return cGroup_0; }

		//ruletyp="CALLER"
		public Assignment getRuletypAssignment_0_0() { return cRuletypAssignment_0_0; }

		//"CALLER"
		public Keyword getRuletypCALLERKeyword_0_0_0() { return cRuletypCALLERKeyword_0_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_0_1() { return cRuleAssignment_0_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_0_1_0() { return cRuleIDTerminalRuleCall_0_1_0; }

		//("." feature1=ID)?
		public Group getGroup_0_2() { return cGroup_0_2; }

		//"."
		public Keyword getFullStopKeyword_0_2_0() { return cFullStopKeyword_0_2_0; }

		//feature1=ID
		public Assignment getFeature1Assignment_0_2_1() { return cFeature1Assignment_0_2_1; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_0_2_1_0() { return cFeature1IDTerminalRuleCall_0_2_1_0; }

		//ruletyp="PREFIX" rule=ID prefix=MultString (feature1=ID "=")? par1=ID
		public Group getGroup_1() { return cGroup_1; }

		//ruletyp="PREFIX"
		public Assignment getRuletypAssignment_1_0() { return cRuletypAssignment_1_0; }

		//"PREFIX"
		public Keyword getRuletypPREFIXKeyword_1_0_0() { return cRuletypPREFIXKeyword_1_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_1_1() { return cRuleAssignment_1_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_1_1_0() { return cRuleIDTerminalRuleCall_1_1_0; }

		//prefix=MultString
		public Assignment getPrefixAssignment_1_2() { return cPrefixAssignment_1_2; }

		//MultString
		public RuleCall getPrefixMultStringParserRuleCall_1_2_0() { return cPrefixMultStringParserRuleCall_1_2_0; }

		//(feature1=ID "=")?
		public Group getGroup_1_3() { return cGroup_1_3; }

		//feature1=ID
		public Assignment getFeature1Assignment_1_3_0() { return cFeature1Assignment_1_3_0; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_1_3_0_0() { return cFeature1IDTerminalRuleCall_1_3_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_1_3_1() { return cEqualsSignKeyword_1_3_1; }

		//par1=ID
		public Assignment getPar1Assignment_1_4() { return cPar1Assignment_1_4; }

		//ID
		public RuleCall getPar1IDTerminalRuleCall_1_4_0() { return cPar1IDTerminalRuleCall_1_4_0; }

		//ruletyp="SUFFIX" rule=ID (feature1=ID "=")? par1=ID suffix=MultString
		public Group getGroup_2() { return cGroup_2; }

		//ruletyp="SUFFIX"
		public Assignment getRuletypAssignment_2_0() { return cRuletypAssignment_2_0; }

		//"SUFFIX"
		public Keyword getRuletypSUFFIXKeyword_2_0_0() { return cRuletypSUFFIXKeyword_2_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_2_1() { return cRuleAssignment_2_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_2_1_0() { return cRuleIDTerminalRuleCall_2_1_0; }

		//(feature1=ID "=")?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//feature1=ID
		public Assignment getFeature1Assignment_2_2_0() { return cFeature1Assignment_2_2_0; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_2_2_0_0() { return cFeature1IDTerminalRuleCall_2_2_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_2_1() { return cEqualsSignKeyword_2_2_1; }

		//par1=ID
		public Assignment getPar1Assignment_2_3() { return cPar1Assignment_2_3; }

		//ID
		public RuleCall getPar1IDTerminalRuleCall_2_3_0() { return cPar1IDTerminalRuleCall_2_3_0; }

		//suffix=MultString
		public Assignment getSuffixAssignment_2_4() { return cSuffixAssignment_2_4; }

		//MultString
		public RuleCall getSuffixMultStringParserRuleCall_2_4_0() { return cSuffixMultStringParserRuleCall_2_4_0; }

		//ruletyp="INFIX" rule=ID (feature1=ID "=")? par1=ID infix=MultString (feature2=ID "=")? par2=ID
		public Group getGroup_3() { return cGroup_3; }

		//ruletyp="INFIX"
		public Assignment getRuletypAssignment_3_0() { return cRuletypAssignment_3_0; }

		//"INFIX"
		public Keyword getRuletypINFIXKeyword_3_0_0() { return cRuletypINFIXKeyword_3_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_3_1() { return cRuleAssignment_3_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_3_1_0() { return cRuleIDTerminalRuleCall_3_1_0; }

		//(feature1=ID "=")?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//feature1=ID
		public Assignment getFeature1Assignment_3_2_0() { return cFeature1Assignment_3_2_0; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_3_2_0_0() { return cFeature1IDTerminalRuleCall_3_2_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_2_1() { return cEqualsSignKeyword_3_2_1; }

		//par1=ID
		public Assignment getPar1Assignment_3_3() { return cPar1Assignment_3_3; }

		//ID
		public RuleCall getPar1IDTerminalRuleCall_3_3_0() { return cPar1IDTerminalRuleCall_3_3_0; }

		//infix=MultString
		public Assignment getInfixAssignment_3_4() { return cInfixAssignment_3_4; }

		//MultString
		public RuleCall getInfixMultStringParserRuleCall_3_4_0() { return cInfixMultStringParserRuleCall_3_4_0; }

		//(feature2=ID "=")?
		public Group getGroup_3_5() { return cGroup_3_5; }

		//feature2=ID
		public Assignment getFeature2Assignment_3_5_0() { return cFeature2Assignment_3_5_0; }

		//ID
		public RuleCall getFeature2IDTerminalRuleCall_3_5_0_0() { return cFeature2IDTerminalRuleCall_3_5_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_5_1() { return cEqualsSignKeyword_3_5_1; }

		//par2=ID
		public Assignment getPar2Assignment_3_6() { return cPar2Assignment_3_6; }

		//ID
		public RuleCall getPar2IDTerminalRuleCall_3_6_0() { return cPar2IDTerminalRuleCall_3_6_0; }

		//ruletyp="OUTER" rule=ID (feature1=ID "=")? par1=ID inner+=InnerPrecedence+
		public Group getGroup_4() { return cGroup_4; }

		//ruletyp="OUTER"
		public Assignment getRuletypAssignment_4_0() { return cRuletypAssignment_4_0; }

		//"OUTER"
		public Keyword getRuletypOUTERKeyword_4_0_0() { return cRuletypOUTERKeyword_4_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_4_1() { return cRuleAssignment_4_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_4_1_0() { return cRuleIDTerminalRuleCall_4_1_0; }

		//(feature1=ID "=")?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//feature1=ID
		public Assignment getFeature1Assignment_4_2_0() { return cFeature1Assignment_4_2_0; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_4_2_0_0() { return cFeature1IDTerminalRuleCall_4_2_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_4_2_1() { return cEqualsSignKeyword_4_2_1; }

		//par1=ID
		public Assignment getPar1Assignment_4_3() { return cPar1Assignment_4_3; }

		//ID
		public RuleCall getPar1IDTerminalRuleCall_4_3_0() { return cPar1IDTerminalRuleCall_4_3_0; }

		//inner+=InnerPrecedence+
		public Assignment getInnerAssignment_4_4() { return cInnerAssignment_4_4; }

		//InnerPrecedence
		public RuleCall getInnerInnerPrecedenceParserRuleCall_4_4_0() { return cInnerInnerPrecedenceParserRuleCall_4_4_0; }

		//ruletyp="INFIXLEFT" rule=ID par1=ID infixleft=MultString par2=ID
		public Group getGroup_5() { return cGroup_5; }

		//ruletyp="INFIXLEFT"
		public Assignment getRuletypAssignment_5_0() { return cRuletypAssignment_5_0; }

		//"INFIXLEFT"
		public Keyword getRuletypINFIXLEFTKeyword_5_0_0() { return cRuletypINFIXLEFTKeyword_5_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_5_1() { return cRuleAssignment_5_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_5_1_0() { return cRuleIDTerminalRuleCall_5_1_0; }

		//par1=ID
		public Assignment getPar1Assignment_5_2() { return cPar1Assignment_5_2; }

		//ID
		public RuleCall getPar1IDTerminalRuleCall_5_2_0() { return cPar1IDTerminalRuleCall_5_2_0; }

		//infixleft=MultString
		public Assignment getInfixleftAssignment_5_3() { return cInfixleftAssignment_5_3; }

		//MultString
		public RuleCall getInfixleftMultStringParserRuleCall_5_3_0() { return cInfixleftMultStringParserRuleCall_5_3_0; }

		//par2=ID
		public Assignment getPar2Assignment_5_4() { return cPar2Assignment_5_4; }

		//ID
		public RuleCall getPar2IDTerminalRuleCall_5_4_0() { return cPar2IDTerminalRuleCall_5_4_0; }

		//ruletyp="BRACKET" rule=ID bracket=ID
		public Group getGroup_6() { return cGroup_6; }

		//ruletyp="BRACKET"
		public Assignment getRuletypAssignment_6_0() { return cRuletypAssignment_6_0; }

		//"BRACKET"
		public Keyword getRuletypBRACKETKeyword_6_0_0() { return cRuletypBRACKETKeyword_6_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_6_1() { return cRuleAssignment_6_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_6_1_0() { return cRuleIDTerminalRuleCall_6_1_0; }

		//bracket=ID
		public Assignment getBracketAssignment_6_2() { return cBracketAssignment_6_2; }

		//ID
		public RuleCall getBracketIDTerminalRuleCall_6_2_0() { return cBracketIDTerminalRuleCall_6_2_0; }

		//ruletyp="BRACES" rule=ID braces=ID
		public Group getGroup_7() { return cGroup_7; }

		//ruletyp="BRACES"
		public Assignment getRuletypAssignment_7_0() { return cRuletypAssignment_7_0; }

		//"BRACES"
		public Keyword getRuletypBRACESKeyword_7_0_0() { return cRuletypBRACESKeyword_7_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_7_1() { return cRuleAssignment_7_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_7_1_0() { return cRuleIDTerminalRuleCall_7_1_0; }

		//braces=ID
		public Assignment getBracesAssignment_7_2() { return cBracesAssignment_7_2; }

		//ID
		public RuleCall getBracesIDTerminalRuleCall_7_2_0() { return cBracesIDTerminalRuleCall_7_2_0; }

		//ruletyp="PARENTHESIS" rule=ID parenthesis=ID
		public Group getGroup_8() { return cGroup_8; }

		//ruletyp="PARENTHESIS"
		public Assignment getRuletypAssignment_8_0() { return cRuletypAssignment_8_0; }

		//"PARENTHESIS"
		public Keyword getRuletypPARENTHESISKeyword_8_0_0() { return cRuletypPARENTHESISKeyword_8_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_8_1() { return cRuleAssignment_8_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_8_1_0() { return cRuleIDTerminalRuleCall_8_1_0; }

		//parenthesis=ID
		public Assignment getParenthesisAssignment_8_2() { return cParenthesisAssignment_8_2; }

		//ID
		public RuleCall getParenthesisIDTerminalRuleCall_8_2_0() { return cParenthesisIDTerminalRuleCall_8_2_0; }

		//ruletyp="ANGLE" rule=ID angle=ID
		public Group getGroup_9() { return cGroup_9; }

		//ruletyp="ANGLE"
		public Assignment getRuletypAssignment_9_0() { return cRuletypAssignment_9_0; }

		//"ANGLE"
		public Keyword getRuletypANGLEKeyword_9_0_0() { return cRuletypANGLEKeyword_9_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_9_1() { return cRuleAssignment_9_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_9_1_0() { return cRuleIDTerminalRuleCall_9_1_0; }

		//angle=ID
		public Assignment getAngleAssignment_9_2() { return cAngleAssignment_9_2; }

		//ID
		public RuleCall getAngleIDTerminalRuleCall_9_2_0() { return cAngleIDTerminalRuleCall_9_2_0; }

		//ruletyp="MEMBERFEATURE" rule=ID (feature1=ID "=")? par1=ID infix=MultString (feature2=ID "=")? par2=ID
		public Group getGroup_10() { return cGroup_10; }

		//ruletyp="MEMBERFEATURE"
		public Assignment getRuletypAssignment_10_0() { return cRuletypAssignment_10_0; }

		//"MEMBERFEATURE"
		public Keyword getRuletypMEMBERFEATUREKeyword_10_0_0() { return cRuletypMEMBERFEATUREKeyword_10_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_10_1() { return cRuleAssignment_10_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_10_1_0() { return cRuleIDTerminalRuleCall_10_1_0; }

		//(feature1=ID "=")?
		public Group getGroup_10_2() { return cGroup_10_2; }

		//feature1=ID
		public Assignment getFeature1Assignment_10_2_0() { return cFeature1Assignment_10_2_0; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_10_2_0_0() { return cFeature1IDTerminalRuleCall_10_2_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_10_2_1() { return cEqualsSignKeyword_10_2_1; }

		//par1=ID
		public Assignment getPar1Assignment_10_3() { return cPar1Assignment_10_3; }

		//ID
		public RuleCall getPar1IDTerminalRuleCall_10_3_0() { return cPar1IDTerminalRuleCall_10_3_0; }

		//infix=MultString
		public Assignment getInfixAssignment_10_4() { return cInfixAssignment_10_4; }

		//MultString
		public RuleCall getInfixMultStringParserRuleCall_10_4_0() { return cInfixMultStringParserRuleCall_10_4_0; }

		//(feature2=ID "=")?
		public Group getGroup_10_5() { return cGroup_10_5; }

		//feature2=ID
		public Assignment getFeature2Assignment_10_5_0() { return cFeature2Assignment_10_5_0; }

		//ID
		public RuleCall getFeature2IDTerminalRuleCall_10_5_0_0() { return cFeature2IDTerminalRuleCall_10_5_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_10_5_1() { return cEqualsSignKeyword_10_5_1; }

		//par2=ID
		public Assignment getPar2Assignment_10_6() { return cPar2Assignment_10_6; }

		//ID
		public RuleCall getPar2IDTerminalRuleCall_10_6_0() { return cPar2IDTerminalRuleCall_10_6_0; }
	}

	public class InnerPrecedenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InnerPrecedence");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cRuletypAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cRuletypINNERPREFIXKeyword_0_0_0 = (Keyword)cRuletypAssignment_0_0.eContents().get(0);
		private final Assignment cPrefixAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cPrefixMultStringParserRuleCall_0_1_0 = (RuleCall)cPrefixAssignment_0_1.eContents().get(0);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Assignment cFeature1Assignment_0_2_0 = (Assignment)cGroup_0_2.eContents().get(0);
		private final RuleCall cFeature1IDTerminalRuleCall_0_2_0_0 = (RuleCall)cFeature1Assignment_0_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_2_1 = (Keyword)cGroup_0_2.eContents().get(1);
		private final Assignment cPar2Assignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cPar2IDTerminalRuleCall_0_3_0 = (RuleCall)cPar2Assignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cRuletypAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cRuletypINNERSUFFIXKeyword_1_0_0 = (Keyword)cRuletypAssignment_1_0.eContents().get(0);
		private final Assignment cSuffixAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSuffixMultStringParserRuleCall_1_1_0 = (RuleCall)cSuffixAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cRuletypAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cRuletypINNERINFIXKeyword_2_0_0 = (Keyword)cRuletypAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Assignment cModAssignment_2_1_0 = (Assignment)cGroup_2_1.eContents().get(0);
		private final Keyword cModCALLERKeyword_2_1_0_0 = (Keyword)cModAssignment_2_1_0.eContents().get(0);
		private final Assignment cRuleAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_2_1_1_0 = (RuleCall)cRuleAssignment_2_1_1.eContents().get(0);
		private final Group cGroup_2_1_2 = (Group)cGroup_2_1.eContents().get(2);
		private final Keyword cFullStopKeyword_2_1_2_0 = (Keyword)cGroup_2_1_2.eContents().get(0);
		private final Assignment cFeature1Assignment_2_1_2_1 = (Assignment)cGroup_2_1_2.eContents().get(1);
		private final RuleCall cFeature1IDTerminalRuleCall_2_1_2_1_0 = (RuleCall)cFeature1Assignment_2_1_2_1.eContents().get(0);
		private final Assignment cInfixAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cInfixMultStringParserRuleCall_2_2_0 = (RuleCall)cInfixAssignment_2_2.eContents().get(0);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Assignment cFeature2Assignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final RuleCall cFeature2IDTerminalRuleCall_2_3_0_0 = (RuleCall)cFeature2Assignment_2_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_3_1 = (Keyword)cGroup_2_3.eContents().get(1);
		private final Assignment cPar2Assignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cPar2IDTerminalRuleCall_2_4_0 = (RuleCall)cPar2Assignment_2_4.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cRuletypAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cRuletypINNERINFIXLEFTKeyword_3_0_0 = (Keyword)cRuletypAssignment_3_0.eContents().get(0);
		private final Assignment cInfixleftAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cInfixleftMultStringParserRuleCall_3_1_0 = (RuleCall)cInfixleftAssignment_3_1.eContents().get(0);
		private final Assignment cPar2Assignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPar2IDTerminalRuleCall_3_2_0 = (RuleCall)cPar2Assignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cRuletypAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cRuletypINNERBRACKETKeyword_4_0_0 = (Keyword)cRuletypAssignment_4_0.eContents().get(0);
		private final Assignment cRuleAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_4_1_0 = (RuleCall)cRuleAssignment_4_1.eContents().get(0);
		private final Assignment cBracketAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cBracketIDTerminalRuleCall_4_2_0 = (RuleCall)cBracketAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cRuletypAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cRuletypINNERBRACESKeyword_5_0_0 = (Keyword)cRuletypAssignment_5_0.eContents().get(0);
		private final Assignment cRuleAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_5_1_0 = (RuleCall)cRuleAssignment_5_1.eContents().get(0);
		private final Assignment cBracesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cBracesIDTerminalRuleCall_5_2_0 = (RuleCall)cBracesAssignment_5_2.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cRuletypAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cRuletypINNERPARENTHESISKeyword_6_0_0 = (Keyword)cRuletypAssignment_6_0.eContents().get(0);
		private final Assignment cRuleAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_6_1_0 = (RuleCall)cRuleAssignment_6_1.eContents().get(0);
		private final Assignment cParenthesisAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParenthesisIDTerminalRuleCall_6_2_0 = (RuleCall)cParenthesisAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cRuletypAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cRuletypINNERANGLEKeyword_7_0_0 = (Keyword)cRuletypAssignment_7_0.eContents().get(0);
		private final Assignment cRuleAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cRuleIDTerminalRuleCall_7_1_0 = (RuleCall)cRuleAssignment_7_1.eContents().get(0);
		private final Assignment cAngleAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAngleIDTerminalRuleCall_7_2_0 = (RuleCall)cAngleAssignment_7_2.eContents().get(0);
		
		//InnerPrecedence:
		//	ruletyp="INNERPREFIX" prefix=MultString (feature1=ID "=")? par2=ID | ruletyp="INNERSUFFIX" suffix=MultString |
		//	ruletyp="INNERINFIX" (mod="CALLER" rule=ID ("." feature1=ID)?)? infix=MultString (feature2=ID "=")? par2=ID |
		//	ruletyp="INNERINFIXLEFT" infixleft=MultString par2=ID | ruletyp="INNERBRACKET" rule=ID bracket=ID |
		//	ruletyp="INNERBRACES" rule=ID braces=ID | ruletyp="INNERPARENTHESIS" rule=ID parenthesis=ID | ruletyp="INNERANGLE"
		//	rule=ID angle=ID;
		public ParserRule getRule() { return rule; }

		//ruletyp="INNERPREFIX" prefix=MultString (feature1=ID "=")? par2=ID | ruletyp="INNERSUFFIX" suffix=MultString |
		//ruletyp="INNERINFIX" (mod="CALLER" rule=ID ("." feature1=ID)?)? infix=MultString (feature2=ID "=")? par2=ID |
		//ruletyp="INNERINFIXLEFT" infixleft=MultString par2=ID | ruletyp="INNERBRACKET" rule=ID bracket=ID |
		//ruletyp="INNERBRACES" rule=ID braces=ID | ruletyp="INNERPARENTHESIS" rule=ID parenthesis=ID | ruletyp="INNERANGLE"
		//rule=ID angle=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//ruletyp="INNERPREFIX" prefix=MultString (feature1=ID "=")? par2=ID
		public Group getGroup_0() { return cGroup_0; }

		//ruletyp="INNERPREFIX"
		public Assignment getRuletypAssignment_0_0() { return cRuletypAssignment_0_0; }

		//"INNERPREFIX"
		public Keyword getRuletypINNERPREFIXKeyword_0_0_0() { return cRuletypINNERPREFIXKeyword_0_0_0; }

		//prefix=MultString
		public Assignment getPrefixAssignment_0_1() { return cPrefixAssignment_0_1; }

		//MultString
		public RuleCall getPrefixMultStringParserRuleCall_0_1_0() { return cPrefixMultStringParserRuleCall_0_1_0; }

		//(feature1=ID "=")?
		public Group getGroup_0_2() { return cGroup_0_2; }

		//feature1=ID
		public Assignment getFeature1Assignment_0_2_0() { return cFeature1Assignment_0_2_0; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_0_2_0_0() { return cFeature1IDTerminalRuleCall_0_2_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_0_2_1() { return cEqualsSignKeyword_0_2_1; }

		//par2=ID
		public Assignment getPar2Assignment_0_3() { return cPar2Assignment_0_3; }

		//ID
		public RuleCall getPar2IDTerminalRuleCall_0_3_0() { return cPar2IDTerminalRuleCall_0_3_0; }

		//ruletyp="INNERSUFFIX" suffix=MultString
		public Group getGroup_1() { return cGroup_1; }

		//ruletyp="INNERSUFFIX"
		public Assignment getRuletypAssignment_1_0() { return cRuletypAssignment_1_0; }

		//"INNERSUFFIX"
		public Keyword getRuletypINNERSUFFIXKeyword_1_0_0() { return cRuletypINNERSUFFIXKeyword_1_0_0; }

		//suffix=MultString
		public Assignment getSuffixAssignment_1_1() { return cSuffixAssignment_1_1; }

		//MultString
		public RuleCall getSuffixMultStringParserRuleCall_1_1_0() { return cSuffixMultStringParserRuleCall_1_1_0; }

		//ruletyp="INNERINFIX" (mod="CALLER" rule=ID ("." feature1=ID)?)? infix=MultString (feature2=ID "=")? par2=ID
		public Group getGroup_2() { return cGroup_2; }

		//ruletyp="INNERINFIX"
		public Assignment getRuletypAssignment_2_0() { return cRuletypAssignment_2_0; }

		//"INNERINFIX"
		public Keyword getRuletypINNERINFIXKeyword_2_0_0() { return cRuletypINNERINFIXKeyword_2_0_0; }

		//(mod="CALLER" rule=ID ("." feature1=ID)?)?
		public Group getGroup_2_1() { return cGroup_2_1; }

		//mod="CALLER"
		public Assignment getModAssignment_2_1_0() { return cModAssignment_2_1_0; }

		//"CALLER"
		public Keyword getModCALLERKeyword_2_1_0_0() { return cModCALLERKeyword_2_1_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_2_1_1() { return cRuleAssignment_2_1_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_2_1_1_0() { return cRuleIDTerminalRuleCall_2_1_1_0; }

		//("." feature1=ID)?
		public Group getGroup_2_1_2() { return cGroup_2_1_2; }

		//"."
		public Keyword getFullStopKeyword_2_1_2_0() { return cFullStopKeyword_2_1_2_0; }

		//feature1=ID
		public Assignment getFeature1Assignment_2_1_2_1() { return cFeature1Assignment_2_1_2_1; }

		//ID
		public RuleCall getFeature1IDTerminalRuleCall_2_1_2_1_0() { return cFeature1IDTerminalRuleCall_2_1_2_1_0; }

		//infix=MultString
		public Assignment getInfixAssignment_2_2() { return cInfixAssignment_2_2; }

		//MultString
		public RuleCall getInfixMultStringParserRuleCall_2_2_0() { return cInfixMultStringParserRuleCall_2_2_0; }

		//(feature2=ID "=")?
		public Group getGroup_2_3() { return cGroup_2_3; }

		//feature2=ID
		public Assignment getFeature2Assignment_2_3_0() { return cFeature2Assignment_2_3_0; }

		//ID
		public RuleCall getFeature2IDTerminalRuleCall_2_3_0_0() { return cFeature2IDTerminalRuleCall_2_3_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_2_3_1() { return cEqualsSignKeyword_2_3_1; }

		//par2=ID
		public Assignment getPar2Assignment_2_4() { return cPar2Assignment_2_4; }

		//ID
		public RuleCall getPar2IDTerminalRuleCall_2_4_0() { return cPar2IDTerminalRuleCall_2_4_0; }

		//ruletyp="INNERINFIXLEFT" infixleft=MultString par2=ID
		public Group getGroup_3() { return cGroup_3; }

		//ruletyp="INNERINFIXLEFT"
		public Assignment getRuletypAssignment_3_0() { return cRuletypAssignment_3_0; }

		//"INNERINFIXLEFT"
		public Keyword getRuletypINNERINFIXLEFTKeyword_3_0_0() { return cRuletypINNERINFIXLEFTKeyword_3_0_0; }

		//infixleft=MultString
		public Assignment getInfixleftAssignment_3_1() { return cInfixleftAssignment_3_1; }

		//MultString
		public RuleCall getInfixleftMultStringParserRuleCall_3_1_0() { return cInfixleftMultStringParserRuleCall_3_1_0; }

		//par2=ID
		public Assignment getPar2Assignment_3_2() { return cPar2Assignment_3_2; }

		//ID
		public RuleCall getPar2IDTerminalRuleCall_3_2_0() { return cPar2IDTerminalRuleCall_3_2_0; }

		//ruletyp="INNERBRACKET" rule=ID bracket=ID
		public Group getGroup_4() { return cGroup_4; }

		//ruletyp="INNERBRACKET"
		public Assignment getRuletypAssignment_4_0() { return cRuletypAssignment_4_0; }

		//"INNERBRACKET"
		public Keyword getRuletypINNERBRACKETKeyword_4_0_0() { return cRuletypINNERBRACKETKeyword_4_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_4_1() { return cRuleAssignment_4_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_4_1_0() { return cRuleIDTerminalRuleCall_4_1_0; }

		//bracket=ID
		public Assignment getBracketAssignment_4_2() { return cBracketAssignment_4_2; }

		//ID
		public RuleCall getBracketIDTerminalRuleCall_4_2_0() { return cBracketIDTerminalRuleCall_4_2_0; }

		//ruletyp="INNERBRACES" rule=ID braces=ID
		public Group getGroup_5() { return cGroup_5; }

		//ruletyp="INNERBRACES"
		public Assignment getRuletypAssignment_5_0() { return cRuletypAssignment_5_0; }

		//"INNERBRACES"
		public Keyword getRuletypINNERBRACESKeyword_5_0_0() { return cRuletypINNERBRACESKeyword_5_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_5_1() { return cRuleAssignment_5_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_5_1_0() { return cRuleIDTerminalRuleCall_5_1_0; }

		//braces=ID
		public Assignment getBracesAssignment_5_2() { return cBracesAssignment_5_2; }

		//ID
		public RuleCall getBracesIDTerminalRuleCall_5_2_0() { return cBracesIDTerminalRuleCall_5_2_0; }

		//ruletyp="INNERPARENTHESIS" rule=ID parenthesis=ID
		public Group getGroup_6() { return cGroup_6; }

		//ruletyp="INNERPARENTHESIS"
		public Assignment getRuletypAssignment_6_0() { return cRuletypAssignment_6_0; }

		//"INNERPARENTHESIS"
		public Keyword getRuletypINNERPARENTHESISKeyword_6_0_0() { return cRuletypINNERPARENTHESISKeyword_6_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_6_1() { return cRuleAssignment_6_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_6_1_0() { return cRuleIDTerminalRuleCall_6_1_0; }

		//parenthesis=ID
		public Assignment getParenthesisAssignment_6_2() { return cParenthesisAssignment_6_2; }

		//ID
		public RuleCall getParenthesisIDTerminalRuleCall_6_2_0() { return cParenthesisIDTerminalRuleCall_6_2_0; }

		//ruletyp="INNERANGLE" rule=ID angle=ID
		public Group getGroup_7() { return cGroup_7; }

		//ruletyp="INNERANGLE"
		public Assignment getRuletypAssignment_7_0() { return cRuletypAssignment_7_0; }

		//"INNERANGLE"
		public Keyword getRuletypINNERANGLEKeyword_7_0_0() { return cRuletypINNERANGLEKeyword_7_0_0; }

		//rule=ID
		public Assignment getRuleAssignment_7_1() { return cRuleAssignment_7_1; }

		//ID
		public RuleCall getRuleIDTerminalRuleCall_7_1_0() { return cRuleIDTerminalRuleCall_7_1_0; }

		//angle=ID
		public Assignment getAngleAssignment_7_2() { return cAngleAssignment_7_2; }

		//ID
		public RuleCall getAngleIDTerminalRuleCall_7_2_0() { return cAngleIDTerminalRuleCall_7_2_0; }
	}

	public class MultIDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMultIDAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cMiAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cMiIDTerminalRuleCall_1_0_0 = (RuleCall)cMiAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cMiAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cMiIDTerminalRuleCall_1_1_1_0 = (RuleCall)cMiAssignment_1_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		
		//MultID:
		//	{MultID} (mi+=ID | "[" mi+=ID* "]");
		public ParserRule getRule() { return rule; }

		//{MultID} (mi+=ID | "[" mi+=ID* "]")
		public Group getGroup() { return cGroup; }

		//{MultID}
		public Action getMultIDAction_0() { return cMultIDAction_0; }

		//mi+=ID | "[" mi+=ID* "]"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//mi+=ID
		public Assignment getMiAssignment_1_0() { return cMiAssignment_1_0; }

		//ID
		public RuleCall getMiIDTerminalRuleCall_1_0_0() { return cMiIDTerminalRuleCall_1_0_0; }

		//"[" mi+=ID* "]"
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_1_0() { return cLeftSquareBracketKeyword_1_1_0; }

		//mi+=ID*
		public Assignment getMiAssignment_1_1_1() { return cMiAssignment_1_1_1; }

		//ID
		public RuleCall getMiIDTerminalRuleCall_1_1_1_0() { return cMiIDTerminalRuleCall_1_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_1_2() { return cRightSquareBracketKeyword_1_1_2; }
	}

	public class MultStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MultString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMultStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cMsAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cMsSTRINGTerminalRuleCall_1_0_0 = (RuleCall)cMsAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Assignment cSynpredAssignment_1_1_0 = (Assignment)cGroup_1_1.eContents().get(0);
		private final Keyword cSynpredEqualsSignGreaterThanSignKeyword_1_1_0_0 = (Keyword)cSynpredAssignment_1_1_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1_1 = (Keyword)cGroup_1_1.eContents().get(1);
		private final Assignment cCsAssignment_1_1_2 = (Assignment)cGroup_1_1.eContents().get(2);
		private final RuleCall cCsComboStringParserRuleCall_1_1_2_0 = (RuleCall)cCsAssignment_1_1_2.eContents().get(0);
		private final Group cGroup_1_1_3 = (Group)cGroup_1_1.eContents().get(3);
		private final Keyword cVerticalLineKeyword_1_1_3_0 = (Keyword)cGroup_1_1_3.eContents().get(0);
		private final Assignment cCsAssignment_1_1_3_1 = (Assignment)cGroup_1_1_3.eContents().get(1);
		private final RuleCall cCsComboStringParserRuleCall_1_1_3_1_0 = (RuleCall)cCsAssignment_1_1_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_1_4 = (Keyword)cGroup_1_1.eContents().get(4);
		
		//MultString:
		//	{MultString} (ms=STRING | synpred="=>"? "(" cs+=ComboString ("|" cs+=ComboString)* ")");
		public ParserRule getRule() { return rule; }

		//{MultString} (ms=STRING | synpred="=>"? "(" cs+=ComboString ("|" cs+=ComboString)* ")")
		public Group getGroup() { return cGroup; }

		//{MultString}
		public Action getMultStringAction_0() { return cMultStringAction_0; }

		//ms=STRING | synpred="=>"? "(" cs+=ComboString ("|" cs+=ComboString)* ")"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//ms=STRING
		public Assignment getMsAssignment_1_0() { return cMsAssignment_1_0; }

		//STRING
		public RuleCall getMsSTRINGTerminalRuleCall_1_0_0() { return cMsSTRINGTerminalRuleCall_1_0_0; }

		//synpred="=>"? "(" cs+=ComboString ("|" cs+=ComboString)* ")"
		public Group getGroup_1_1() { return cGroup_1_1; }

		//synpred="=>"?
		public Assignment getSynpredAssignment_1_1_0() { return cSynpredAssignment_1_1_0; }

		//"=>"
		public Keyword getSynpredEqualsSignGreaterThanSignKeyword_1_1_0_0() { return cSynpredEqualsSignGreaterThanSignKeyword_1_1_0_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_1() { return cLeftParenthesisKeyword_1_1_1; }

		//cs+=ComboString
		public Assignment getCsAssignment_1_1_2() { return cCsAssignment_1_1_2; }

		//ComboString
		public RuleCall getCsComboStringParserRuleCall_1_1_2_0() { return cCsComboStringParserRuleCall_1_1_2_0; }

		//("|" cs+=ComboString)*
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }

		//"|"
		public Keyword getVerticalLineKeyword_1_1_3_0() { return cVerticalLineKeyword_1_1_3_0; }

		//cs+=ComboString
		public Assignment getCsAssignment_1_1_3_1() { return cCsAssignment_1_1_3_1; }

		//ComboString
		public RuleCall getCsComboStringParserRuleCall_1_1_3_1_0() { return cCsComboStringParserRuleCall_1_1_3_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_4() { return cRightParenthesisKeyword_1_1_4; }
	}

	public class ComboStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ComboString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComboStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cInnerAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInnerMultStringParserRuleCall_1_0 = (RuleCall)cInnerAssignment_1.eContents().get(0);
		
		//ComboString:
		//	{ComboString} inner+=MultString*;
		public ParserRule getRule() { return rule; }

		//{ComboString} inner+=MultString*
		public Group getGroup() { return cGroup; }

		//{ComboString}
		public Action getComboStringAction_0() { return cComboStringAction_0; }

		//inner+=MultString*
		public Assignment getInnerAssignment_1() { return cInnerAssignment_1; }

		//MultString
		public RuleCall getInnerMultStringParserRuleCall_1_0() { return cInnerMultStringParserRuleCall_1_0; }
	}

	public class PrimaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Primary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPRIMARYKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cInnerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInnerPrimaryInnerParserRuleCall_2_0 = (RuleCall)cInnerAssignment_2.eContents().get(0);
		
		//Primary:
		//	"PRIMARY" name=ID inner+=PrimaryInner*;
		public ParserRule getRule() { return rule; }

		//"PRIMARY" name=ID inner+=PrimaryInner*
		public Group getGroup() { return cGroup; }

		//"PRIMARY"
		public Keyword getPRIMARYKeyword_0() { return cPRIMARYKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//inner+=PrimaryInner*
		public Assignment getInnerAssignment_2() { return cInnerAssignment_2; }

		//PrimaryInner
		public RuleCall getInnerPrimaryInnerParserRuleCall_2_0() { return cInnerPrimaryInnerParserRuleCall_2_0; }
	}

	public class PrimaryInnerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PrimaryInner");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cPrimarytypAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cPrimarytypCONSTRUCTORKeyword_0_0_0 = (Keyword)cPrimarytypAssignment_0_0.eContents().get(0);
		private final Assignment cConstructAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_0_1_0 = (RuleCall)cConstructAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cPrimarytypAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cPrimarytypBLOCKKeyword_1_0_0 = (Keyword)cPrimarytypAssignment_1_0.eContents().get(0);
		private final Assignment cConstructAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_1_1_0 = (RuleCall)cConstructAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cPrimarytypAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cPrimarytypSWITCHKeyword_2_0_0 = (Keyword)cPrimarytypAssignment_2_0.eContents().get(0);
		private final Assignment cConstructAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_2_1_0 = (RuleCall)cConstructAssignment_2_1.eContents().get(0);
		private final Assignment cConstruct2Assignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cConstruct2IDTerminalRuleCall_2_2_0 = (RuleCall)cConstruct2Assignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cPrimarytypAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cPrimarytypSYNCHRONIZEDKeyword_3_0_0 = (Keyword)cPrimarytypAssignment_3_0.eContents().get(0);
		private final Assignment cConstructAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_3_1_0 = (RuleCall)cConstructAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cPrimarytypAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cPrimarytypFEATURECALLKeyword_4_0_0 = (Keyword)cPrimarytypAssignment_4_0.eContents().get(0);
		private final Assignment cConstructAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_4_1_0 = (RuleCall)cConstructAssignment_4_1.eContents().get(0);
		private final Assignment cFeatureAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cFeatureMultStringParserRuleCall_4_2_0 = (RuleCall)cFeatureAssignment_4_2.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cPrimarytypAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cPrimarytypIFEXPRESSIONKeyword_5_0_0 = (Keyword)cPrimarytypAssignment_5_0.eContents().get(0);
		private final Assignment cConstructAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_5_1_0 = (RuleCall)cConstructAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cPrimarytypAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cPrimarytypFOREXPRESSIONKeyword_6_0_0 = (Keyword)cPrimarytypAssignment_6_0.eContents().get(0);
		private final Assignment cConstructAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_6_1_0 = (RuleCall)cConstructAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cPrimarytypAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cPrimarytypBASICFORLOOPEXPRESSIONKeyword_7_0_0 = (Keyword)cPrimarytypAssignment_7_0.eContents().get(0);
		private final Assignment cConstructAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_7_1_0 = (RuleCall)cConstructAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Assignment cPrimarytypAssignment_8_0 = (Assignment)cGroup_8.eContents().get(0);
		private final Keyword cPrimarytypWHILEEXPRESSIONKeyword_8_0_0 = (Keyword)cPrimarytypAssignment_8_0.eContents().get(0);
		private final Assignment cConstructAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_8_1_0 = (RuleCall)cConstructAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Assignment cPrimarytypAssignment_9_0 = (Assignment)cGroup_9.eContents().get(0);
		private final Keyword cPrimarytypDOWHILEEXPRESSIONKeyword_9_0_0 = (Keyword)cPrimarytypAssignment_9_0.eContents().get(0);
		private final Assignment cConstructAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_9_1_0 = (RuleCall)cConstructAssignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Assignment cPrimarytypAssignment_10_0 = (Assignment)cGroup_10.eContents().get(0);
		private final Keyword cPrimarytypTHROWEXPRESSIONKeyword_10_0_0 = (Keyword)cPrimarytypAssignment_10_0.eContents().get(0);
		private final Assignment cConstructAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_10_1_0 = (RuleCall)cConstructAssignment_10_1.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Assignment cPrimarytypAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final Keyword cPrimarytypRETURNEXPRESSIONKeyword_11_0_0 = (Keyword)cPrimarytypAssignment_11_0.eContents().get(0);
		private final Assignment cConstructAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_11_1_0 = (RuleCall)cConstructAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Assignment cPrimarytypAssignment_12_0 = (Assignment)cGroup_12.eContents().get(0);
		private final Keyword cPrimarytypTRYCATCHFINALYEXPRESSIONKeyword_12_0_0 = (Keyword)cPrimarytypAssignment_12_0.eContents().get(0);
		private final Assignment cConstructAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_12_1_0 = (RuleCall)cConstructAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Assignment cPrimarytypAssignment_13_0 = (Assignment)cGroup_13.eContents().get(0);
		private final Keyword cPrimarytypPARENTHESIZEDEXPRESSIONKeyword_13_0_0 = (Keyword)cPrimarytypAssignment_13_0.eContents().get(0);
		private final Assignment cConstructAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_13_1_0 = (RuleCall)cConstructAssignment_13_1.eContents().get(0);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Assignment cPrimarytypAssignment_14_0 = (Assignment)cGroup_14.eContents().get(0);
		private final Keyword cPrimarytypLITERALEXPRESSIONKeyword_14_0_0 = (Keyword)cPrimarytypAssignment_14_0.eContents().get(0);
		private final Assignment cConstructAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_14_1_0 = (RuleCall)cConstructAssignment_14_1.eContents().get(0);
		
		//PrimaryInner:
		//	primarytyp="CONSTRUCTOR" construct=ID | primarytyp="BLOCK" construct=ID | primarytyp="SWITCH" construct=ID
		//	construct2=ID | primarytyp="SYNCHRONIZED" construct=ID | primarytyp="FEATURECALL" construct=ID feature=MultString |
		//	primarytyp="IFEXPRESSION" construct=ID | primarytyp="FOREXPRESSION" construct=ID | primarytyp="BASICFORLOOPEXPRESSION"
		//	construct=ID | primarytyp="WHILEEXPRESSION" construct=ID | primarytyp="DOWHILEEXPRESSION" construct=ID |
		//	primarytyp="THROWEXPRESSION" construct=ID | primarytyp="RETURNEXPRESSION" construct=ID |
		//	primarytyp="TRYCATCHFINALYEXPRESSION" construct=ID | primarytyp="PARENTHESIZEDEXPRESSION" construct=ID |
		//	primarytyp="LITERALEXPRESSION" construct=ID;
		public ParserRule getRule() { return rule; }

		//primarytyp="CONSTRUCTOR" construct=ID | primarytyp="BLOCK" construct=ID | primarytyp="SWITCH" construct=ID construct2=ID
		//| primarytyp="SYNCHRONIZED" construct=ID | primarytyp="FEATURECALL" construct=ID feature=MultString |
		//primarytyp="IFEXPRESSION" construct=ID | primarytyp="FOREXPRESSION" construct=ID | primarytyp="BASICFORLOOPEXPRESSION"
		//construct=ID | primarytyp="WHILEEXPRESSION" construct=ID | primarytyp="DOWHILEEXPRESSION" construct=ID |
		//primarytyp="THROWEXPRESSION" construct=ID | primarytyp="RETURNEXPRESSION" construct=ID |
		//primarytyp="TRYCATCHFINALYEXPRESSION" construct=ID | primarytyp="PARENTHESIZEDEXPRESSION" construct=ID |
		//primarytyp="LITERALEXPRESSION" construct=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//primarytyp="CONSTRUCTOR" construct=ID
		public Group getGroup_0() { return cGroup_0; }

		//primarytyp="CONSTRUCTOR"
		public Assignment getPrimarytypAssignment_0_0() { return cPrimarytypAssignment_0_0; }

		//"CONSTRUCTOR"
		public Keyword getPrimarytypCONSTRUCTORKeyword_0_0_0() { return cPrimarytypCONSTRUCTORKeyword_0_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_0_1() { return cConstructAssignment_0_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_0_1_0() { return cConstructIDTerminalRuleCall_0_1_0; }

		//primarytyp="BLOCK" construct=ID
		public Group getGroup_1() { return cGroup_1; }

		//primarytyp="BLOCK"
		public Assignment getPrimarytypAssignment_1_0() { return cPrimarytypAssignment_1_0; }

		//"BLOCK"
		public Keyword getPrimarytypBLOCKKeyword_1_0_0() { return cPrimarytypBLOCKKeyword_1_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_1_1() { return cConstructAssignment_1_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_1_1_0() { return cConstructIDTerminalRuleCall_1_1_0; }

		//primarytyp="SWITCH" construct=ID construct2=ID
		public Group getGroup_2() { return cGroup_2; }

		//primarytyp="SWITCH"
		public Assignment getPrimarytypAssignment_2_0() { return cPrimarytypAssignment_2_0; }

		//"SWITCH"
		public Keyword getPrimarytypSWITCHKeyword_2_0_0() { return cPrimarytypSWITCHKeyword_2_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_2_1() { return cConstructAssignment_2_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_2_1_0() { return cConstructIDTerminalRuleCall_2_1_0; }

		//construct2=ID
		public Assignment getConstruct2Assignment_2_2() { return cConstruct2Assignment_2_2; }

		//ID
		public RuleCall getConstruct2IDTerminalRuleCall_2_2_0() { return cConstruct2IDTerminalRuleCall_2_2_0; }

		//primarytyp="SYNCHRONIZED" construct=ID
		public Group getGroup_3() { return cGroup_3; }

		//primarytyp="SYNCHRONIZED"
		public Assignment getPrimarytypAssignment_3_0() { return cPrimarytypAssignment_3_0; }

		//"SYNCHRONIZED"
		public Keyword getPrimarytypSYNCHRONIZEDKeyword_3_0_0() { return cPrimarytypSYNCHRONIZEDKeyword_3_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_3_1() { return cConstructAssignment_3_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_3_1_0() { return cConstructIDTerminalRuleCall_3_1_0; }

		//primarytyp="FEATURECALL" construct=ID feature=MultString
		public Group getGroup_4() { return cGroup_4; }

		//primarytyp="FEATURECALL"
		public Assignment getPrimarytypAssignment_4_0() { return cPrimarytypAssignment_4_0; }

		//"FEATURECALL"
		public Keyword getPrimarytypFEATURECALLKeyword_4_0_0() { return cPrimarytypFEATURECALLKeyword_4_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_4_1() { return cConstructAssignment_4_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_4_1_0() { return cConstructIDTerminalRuleCall_4_1_0; }

		//feature=MultString
		public Assignment getFeatureAssignment_4_2() { return cFeatureAssignment_4_2; }

		//MultString
		public RuleCall getFeatureMultStringParserRuleCall_4_2_0() { return cFeatureMultStringParserRuleCall_4_2_0; }

		//primarytyp="IFEXPRESSION" construct=ID
		public Group getGroup_5() { return cGroup_5; }

		//primarytyp="IFEXPRESSION"
		public Assignment getPrimarytypAssignment_5_0() { return cPrimarytypAssignment_5_0; }

		//"IFEXPRESSION"
		public Keyword getPrimarytypIFEXPRESSIONKeyword_5_0_0() { return cPrimarytypIFEXPRESSIONKeyword_5_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_5_1() { return cConstructAssignment_5_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_5_1_0() { return cConstructIDTerminalRuleCall_5_1_0; }

		//primarytyp="FOREXPRESSION" construct=ID
		public Group getGroup_6() { return cGroup_6; }

		//primarytyp="FOREXPRESSION"
		public Assignment getPrimarytypAssignment_6_0() { return cPrimarytypAssignment_6_0; }

		//"FOREXPRESSION"
		public Keyword getPrimarytypFOREXPRESSIONKeyword_6_0_0() { return cPrimarytypFOREXPRESSIONKeyword_6_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_6_1() { return cConstructAssignment_6_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_6_1_0() { return cConstructIDTerminalRuleCall_6_1_0; }

		//primarytyp="BASICFORLOOPEXPRESSION" construct=ID
		public Group getGroup_7() { return cGroup_7; }

		//primarytyp="BASICFORLOOPEXPRESSION"
		public Assignment getPrimarytypAssignment_7_0() { return cPrimarytypAssignment_7_0; }

		//"BASICFORLOOPEXPRESSION"
		public Keyword getPrimarytypBASICFORLOOPEXPRESSIONKeyword_7_0_0() { return cPrimarytypBASICFORLOOPEXPRESSIONKeyword_7_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_7_1() { return cConstructAssignment_7_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_7_1_0() { return cConstructIDTerminalRuleCall_7_1_0; }

		//primarytyp="WHILEEXPRESSION" construct=ID
		public Group getGroup_8() { return cGroup_8; }

		//primarytyp="WHILEEXPRESSION"
		public Assignment getPrimarytypAssignment_8_0() { return cPrimarytypAssignment_8_0; }

		//"WHILEEXPRESSION"
		public Keyword getPrimarytypWHILEEXPRESSIONKeyword_8_0_0() { return cPrimarytypWHILEEXPRESSIONKeyword_8_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_8_1() { return cConstructAssignment_8_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_8_1_0() { return cConstructIDTerminalRuleCall_8_1_0; }

		//primarytyp="DOWHILEEXPRESSION" construct=ID
		public Group getGroup_9() { return cGroup_9; }

		//primarytyp="DOWHILEEXPRESSION"
		public Assignment getPrimarytypAssignment_9_0() { return cPrimarytypAssignment_9_0; }

		//"DOWHILEEXPRESSION"
		public Keyword getPrimarytypDOWHILEEXPRESSIONKeyword_9_0_0() { return cPrimarytypDOWHILEEXPRESSIONKeyword_9_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_9_1() { return cConstructAssignment_9_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_9_1_0() { return cConstructIDTerminalRuleCall_9_1_0; }

		//primarytyp="THROWEXPRESSION" construct=ID
		public Group getGroup_10() { return cGroup_10; }

		//primarytyp="THROWEXPRESSION"
		public Assignment getPrimarytypAssignment_10_0() { return cPrimarytypAssignment_10_0; }

		//"THROWEXPRESSION"
		public Keyword getPrimarytypTHROWEXPRESSIONKeyword_10_0_0() { return cPrimarytypTHROWEXPRESSIONKeyword_10_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_10_1() { return cConstructAssignment_10_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_10_1_0() { return cConstructIDTerminalRuleCall_10_1_0; }

		//primarytyp="RETURNEXPRESSION" construct=ID
		public Group getGroup_11() { return cGroup_11; }

		//primarytyp="RETURNEXPRESSION"
		public Assignment getPrimarytypAssignment_11_0() { return cPrimarytypAssignment_11_0; }

		//"RETURNEXPRESSION"
		public Keyword getPrimarytypRETURNEXPRESSIONKeyword_11_0_0() { return cPrimarytypRETURNEXPRESSIONKeyword_11_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_11_1() { return cConstructAssignment_11_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_11_1_0() { return cConstructIDTerminalRuleCall_11_1_0; }

		//primarytyp="TRYCATCHFINALYEXPRESSION" construct=ID
		public Group getGroup_12() { return cGroup_12; }

		//primarytyp="TRYCATCHFINALYEXPRESSION"
		public Assignment getPrimarytypAssignment_12_0() { return cPrimarytypAssignment_12_0; }

		//"TRYCATCHFINALYEXPRESSION"
		public Keyword getPrimarytypTRYCATCHFINALYEXPRESSIONKeyword_12_0_0() { return cPrimarytypTRYCATCHFINALYEXPRESSIONKeyword_12_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_12_1() { return cConstructAssignment_12_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_12_1_0() { return cConstructIDTerminalRuleCall_12_1_0; }

		//primarytyp="PARENTHESIZEDEXPRESSION" construct=ID
		public Group getGroup_13() { return cGroup_13; }

		//primarytyp="PARENTHESIZEDEXPRESSION"
		public Assignment getPrimarytypAssignment_13_0() { return cPrimarytypAssignment_13_0; }

		//"PARENTHESIZEDEXPRESSION"
		public Keyword getPrimarytypPARENTHESIZEDEXPRESSIONKeyword_13_0_0() { return cPrimarytypPARENTHESIZEDEXPRESSIONKeyword_13_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_13_1() { return cConstructAssignment_13_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_13_1_0() { return cConstructIDTerminalRuleCall_13_1_0; }

		//primarytyp="LITERALEXPRESSION" construct=ID
		public Group getGroup_14() { return cGroup_14; }

		//primarytyp="LITERALEXPRESSION"
		public Assignment getPrimarytypAssignment_14_0() { return cPrimarytypAssignment_14_0; }

		//"LITERALEXPRESSION"
		public Keyword getPrimarytypLITERALEXPRESSIONKeyword_14_0_0() { return cPrimarytypLITERALEXPRESSIONKeyword_14_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_14_1() { return cConstructAssignment_14_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_14_1_0() { return cConstructIDTerminalRuleCall_14_1_0; }
	}

	public class LiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Literal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLITERALKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cInnerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cInnerLiteralInnerParserRuleCall_2_0 = (RuleCall)cInnerAssignment_2.eContents().get(0);
		
		//Literal:
		//	"LITERAL" name=ID inner+=LiteralInner*;
		public ParserRule getRule() { return rule; }

		//"LITERAL" name=ID inner+=LiteralInner*
		public Group getGroup() { return cGroup; }

		//"LITERAL"
		public Keyword getLITERALKeyword_0() { return cLITERALKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//inner+=LiteralInner*
		public Assignment getInnerAssignment_2() { return cInnerAssignment_2; }

		//LiteralInner
		public RuleCall getInnerLiteralInnerParserRuleCall_2_0() { return cInnerLiteralInnerParserRuleCall_2_0; }
	}

	public class LiteralInnerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LiteralInner");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cPrimarytypAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cPrimarytypCOLLECTIONLITERALKeyword_0_0_0 = (Keyword)cPrimarytypAssignment_0_0.eContents().get(0);
		private final Assignment cConstructAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_0_1_0 = (RuleCall)cConstructAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cPrimarytypAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cPrimarytypCLOSUREKeyword_1_0_0 = (Keyword)cPrimarytypAssignment_1_0.eContents().get(0);
		private final Assignment cConstructAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_1_1_0 = (RuleCall)cConstructAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Assignment cPrimarytypAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cPrimarytypBOOLEANLITERALKeyword_2_0_0 = (Keyword)cPrimarytypAssignment_2_0.eContents().get(0);
		private final Assignment cConstructAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_2_1_0 = (RuleCall)cConstructAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Assignment cPrimarytypAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Keyword cPrimarytypNUMBERLITERALKeyword_3_0_0 = (Keyword)cPrimarytypAssignment_3_0.eContents().get(0);
		private final Assignment cConstructAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_3_1_0 = (RuleCall)cConstructAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Assignment cPrimarytypAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final Keyword cPrimarytypNULLLITERALKeyword_4_0_0 = (Keyword)cPrimarytypAssignment_4_0.eContents().get(0);
		private final Assignment cConstructAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_4_1_0 = (RuleCall)cConstructAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Assignment cPrimarytypAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final Keyword cPrimarytypSTRINGLITERALKeyword_5_0_0 = (Keyword)cPrimarytypAssignment_5_0.eContents().get(0);
		private final Assignment cConstructAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_5_1_0 = (RuleCall)cConstructAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Assignment cPrimarytypAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final Keyword cPrimarytypTYPELITERALKeyword_6_0_0 = (Keyword)cPrimarytypAssignment_6_0.eContents().get(0);
		private final Assignment cConstructAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cConstructIDTerminalRuleCall_6_1_0 = (RuleCall)cConstructAssignment_6_1.eContents().get(0);
		
		//LiteralInner:
		//	primarytyp="COLLECTIONLITERAL" construct=ID | primarytyp="CLOSURE" construct=ID | primarytyp="BOOLEANLITERAL"
		//	construct=ID | primarytyp="NUMBERLITERAL" construct=ID | primarytyp="NULLLITERAL" construct=ID |
		//	primarytyp="STRINGLITERAL" construct=ID | primarytyp="TYPELITERAL" construct=ID;
		public ParserRule getRule() { return rule; }

		//primarytyp="COLLECTIONLITERAL" construct=ID | primarytyp="CLOSURE" construct=ID | primarytyp="BOOLEANLITERAL"
		//construct=ID | primarytyp="NUMBERLITERAL" construct=ID | primarytyp="NULLLITERAL" construct=ID |
		//primarytyp="STRINGLITERAL" construct=ID | primarytyp="TYPELITERAL" construct=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//primarytyp="COLLECTIONLITERAL" construct=ID
		public Group getGroup_0() { return cGroup_0; }

		//primarytyp="COLLECTIONLITERAL"
		public Assignment getPrimarytypAssignment_0_0() { return cPrimarytypAssignment_0_0; }

		//"COLLECTIONLITERAL"
		public Keyword getPrimarytypCOLLECTIONLITERALKeyword_0_0_0() { return cPrimarytypCOLLECTIONLITERALKeyword_0_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_0_1() { return cConstructAssignment_0_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_0_1_0() { return cConstructIDTerminalRuleCall_0_1_0; }

		//primarytyp="CLOSURE" construct=ID
		public Group getGroup_1() { return cGroup_1; }

		//primarytyp="CLOSURE"
		public Assignment getPrimarytypAssignment_1_0() { return cPrimarytypAssignment_1_0; }

		//"CLOSURE"
		public Keyword getPrimarytypCLOSUREKeyword_1_0_0() { return cPrimarytypCLOSUREKeyword_1_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_1_1() { return cConstructAssignment_1_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_1_1_0() { return cConstructIDTerminalRuleCall_1_1_0; }

		//primarytyp="BOOLEANLITERAL" construct=ID
		public Group getGroup_2() { return cGroup_2; }

		//primarytyp="BOOLEANLITERAL"
		public Assignment getPrimarytypAssignment_2_0() { return cPrimarytypAssignment_2_0; }

		//"BOOLEANLITERAL"
		public Keyword getPrimarytypBOOLEANLITERALKeyword_2_0_0() { return cPrimarytypBOOLEANLITERALKeyword_2_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_2_1() { return cConstructAssignment_2_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_2_1_0() { return cConstructIDTerminalRuleCall_2_1_0; }

		//primarytyp="NUMBERLITERAL" construct=ID
		public Group getGroup_3() { return cGroup_3; }

		//primarytyp="NUMBERLITERAL"
		public Assignment getPrimarytypAssignment_3_0() { return cPrimarytypAssignment_3_0; }

		//"NUMBERLITERAL"
		public Keyword getPrimarytypNUMBERLITERALKeyword_3_0_0() { return cPrimarytypNUMBERLITERALKeyword_3_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_3_1() { return cConstructAssignment_3_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_3_1_0() { return cConstructIDTerminalRuleCall_3_1_0; }

		//primarytyp="NULLLITERAL" construct=ID
		public Group getGroup_4() { return cGroup_4; }

		//primarytyp="NULLLITERAL"
		public Assignment getPrimarytypAssignment_4_0() { return cPrimarytypAssignment_4_0; }

		//"NULLLITERAL"
		public Keyword getPrimarytypNULLLITERALKeyword_4_0_0() { return cPrimarytypNULLLITERALKeyword_4_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_4_1() { return cConstructAssignment_4_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_4_1_0() { return cConstructIDTerminalRuleCall_4_1_0; }

		//primarytyp="STRINGLITERAL" construct=ID
		public Group getGroup_5() { return cGroup_5; }

		//primarytyp="STRINGLITERAL"
		public Assignment getPrimarytypAssignment_5_0() { return cPrimarytypAssignment_5_0; }

		//"STRINGLITERAL"
		public Keyword getPrimarytypSTRINGLITERALKeyword_5_0_0() { return cPrimarytypSTRINGLITERALKeyword_5_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_5_1() { return cConstructAssignment_5_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_5_1_0() { return cConstructIDTerminalRuleCall_5_1_0; }

		//primarytyp="TYPELITERAL" construct=ID
		public Group getGroup_6() { return cGroup_6; }

		//primarytyp="TYPELITERAL"
		public Assignment getPrimarytypAssignment_6_0() { return cPrimarytypAssignment_6_0; }

		//"TYPELITERAL"
		public Keyword getPrimarytypTYPELITERALKeyword_6_0_0() { return cPrimarytypTYPELITERALKeyword_6_0_0; }

		//construct=ID
		public Assignment getConstructAssignment_6_1() { return cConstructAssignment_6_1; }

		//ID
		public RuleCall getConstructIDTerminalRuleCall_6_1_0() { return cConstructIDTerminalRuleCall_6_1_0; }
	}
	
	
	private final ModelElements pModel;
	private final ClassTypeElements pClassType;
	private final ProcedureElements pProcedure;
	private final ExpressionElements pExpression;
	private final PrecedenceElements pPrecedence;
	private final InnerPrecedenceElements pInnerPrecedence;
	private final MultIDElements pMultID;
	private final MultStringElements pMultString;
	private final ComboStringElements pComboString;
	private final PrimaryElements pPrimary;
	private final PrimaryInnerElements pPrimaryInner;
	private final LiteralElements pLiteral;
	private final LiteralInnerElements pLiteralInner;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GenGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pClassType = new ClassTypeElements();
		this.pProcedure = new ProcedureElements();
		this.pExpression = new ExpressionElements();
		this.pPrecedence = new PrecedenceElements();
		this.pInnerPrecedence = new InnerPrecedenceElements();
		this.pMultID = new MultIDElements();
		this.pMultString = new MultStringElements();
		this.pComboString = new ComboStringElements();
		this.pPrimary = new PrimaryElements();
		this.pPrimaryInner = new PrimaryInnerElements();
		this.pLiteral = new LiteralElements();
		this.pLiteralInner = new LiteralInnerElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.euclideanspace.xgener.Gen".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	(clas+=ClassType | proc+=Procedure | prim+=Primary | lit+=Literal | exp+=Expression)*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//ClassType:
	//	"CLASS" name=ID (noclass+="NOCLASS" | "PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "BLOCKING"
	//	blocking+=("BRACES" | "INDENT"))*;
	public ClassTypeElements getClassTypeAccess() {
		return pClassType;
	}
	
	public ParserRule getClassTypeRule() {
		return getClassTypeAccess().getRule();
	}

	//Procedure:
	//	"PROCEDURE" name=ID ("PREFIX" prefix+=MultID | "SUFFIX" suffix+=MultID | "TYPES" types+=("COLONSEPERATED" |
	//	"SPACESEPERATED" | "INHEADER" | "INFERRED" | "UNTYPED"))*;
	public ProcedureElements getProcedureAccess() {
		return pProcedure;
	}
	
	public ParserRule getProcedureRule() {
		return getProcedureAccess().getRule();
	}

	//Expression:
	//	"EXPRESSION" name=ID prec+=Precedence*;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}

	/// * make this rule separate from Expression so prefix,suffix,infix.... can be
	// * in the same list in any order
	// * / Precedence:
	//	ruletyp="CALLER" rule=ID ("." feature1=ID)? | ruletyp="PREFIX" rule=ID prefix=MultString (feature1=ID "=")? par1=ID |
	//	ruletyp="SUFFIX" rule=ID (feature1=ID "=")? par1=ID suffix=MultString | ruletyp="INFIX" rule=ID (feature1=ID "=")?
	//	par1=ID infix=MultString (feature2=ID "=")? par2=ID | ruletyp="OUTER" rule=ID (feature1=ID "=")? par1=ID
	//	inner+=InnerPrecedence+ | ruletyp="INFIXLEFT" rule=ID par1=ID infixleft=MultString par2=ID | ruletyp="BRACKET" rule=ID
	//	bracket=ID | ruletyp="BRACES" rule=ID braces=ID | ruletyp="PARENTHESIS" rule=ID parenthesis=ID | ruletyp="ANGLE"
	//	rule=ID angle=ID | ruletyp="MEMBERFEATURE" rule=ID (feature1=ID "=")? par1=ID infix=MultString (feature2=ID "=")?
	//	par2=ID;
	public PrecedenceElements getPrecedenceAccess() {
		return pPrecedence;
	}
	
	public ParserRule getPrecedenceRule() {
		return getPrecedenceAccess().getRule();
	}

	//InnerPrecedence:
	//	ruletyp="INNERPREFIX" prefix=MultString (feature1=ID "=")? par2=ID | ruletyp="INNERSUFFIX" suffix=MultString |
	//	ruletyp="INNERINFIX" (mod="CALLER" rule=ID ("." feature1=ID)?)? infix=MultString (feature2=ID "=")? par2=ID |
	//	ruletyp="INNERINFIXLEFT" infixleft=MultString par2=ID | ruletyp="INNERBRACKET" rule=ID bracket=ID |
	//	ruletyp="INNERBRACES" rule=ID braces=ID | ruletyp="INNERPARENTHESIS" rule=ID parenthesis=ID | ruletyp="INNERANGLE"
	//	rule=ID angle=ID;
	public InnerPrecedenceElements getInnerPrecedenceAccess() {
		return pInnerPrecedence;
	}
	
	public ParserRule getInnerPrecedenceRule() {
		return getInnerPrecedenceAccess().getRule();
	}

	//MultID:
	//	{MultID} (mi+=ID | "[" mi+=ID* "]");
	public MultIDElements getMultIDAccess() {
		return pMultID;
	}
	
	public ParserRule getMultIDRule() {
		return getMultIDAccess().getRule();
	}

	//MultString:
	//	{MultString} (ms=STRING | synpred="=>"? "(" cs+=ComboString ("|" cs+=ComboString)* ")");
	public MultStringElements getMultStringAccess() {
		return pMultString;
	}
	
	public ParserRule getMultStringRule() {
		return getMultStringAccess().getRule();
	}

	//ComboString:
	//	{ComboString} inner+=MultString*;
	public ComboStringElements getComboStringAccess() {
		return pComboString;
	}
	
	public ParserRule getComboStringRule() {
		return getComboStringAccess().getRule();
	}

	//Primary:
	//	"PRIMARY" name=ID inner+=PrimaryInner*;
	public PrimaryElements getPrimaryAccess() {
		return pPrimary;
	}
	
	public ParserRule getPrimaryRule() {
		return getPrimaryAccess().getRule();
	}

	//PrimaryInner:
	//	primarytyp="CONSTRUCTOR" construct=ID | primarytyp="BLOCK" construct=ID | primarytyp="SWITCH" construct=ID
	//	construct2=ID | primarytyp="SYNCHRONIZED" construct=ID | primarytyp="FEATURECALL" construct=ID feature=MultString |
	//	primarytyp="IFEXPRESSION" construct=ID | primarytyp="FOREXPRESSION" construct=ID | primarytyp="BASICFORLOOPEXPRESSION"
	//	construct=ID | primarytyp="WHILEEXPRESSION" construct=ID | primarytyp="DOWHILEEXPRESSION" construct=ID |
	//	primarytyp="THROWEXPRESSION" construct=ID | primarytyp="RETURNEXPRESSION" construct=ID |
	//	primarytyp="TRYCATCHFINALYEXPRESSION" construct=ID | primarytyp="PARENTHESIZEDEXPRESSION" construct=ID |
	//	primarytyp="LITERALEXPRESSION" construct=ID;
	public PrimaryInnerElements getPrimaryInnerAccess() {
		return pPrimaryInner;
	}
	
	public ParserRule getPrimaryInnerRule() {
		return getPrimaryInnerAccess().getRule();
	}

	//Literal:
	//	"LITERAL" name=ID inner+=LiteralInner*;
	public LiteralElements getLiteralAccess() {
		return pLiteral;
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}

	//LiteralInner:
	//	primarytyp="COLLECTIONLITERAL" construct=ID | primarytyp="CLOSURE" construct=ID | primarytyp="BOOLEANLITERAL"
	//	construct=ID | primarytyp="NUMBERLITERAL" construct=ID | primarytyp="NULLLITERAL" construct=ID |
	//	primarytyp="STRINGLITERAL" construct=ID | primarytyp="TYPELITERAL" construct=ID;
	public LiteralInnerElements getLiteralInnerAccess() {
		return pLiteralInner;
	}
	
	public ParserRule getLiteralInnerRule() {
		return getLiteralInnerAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
