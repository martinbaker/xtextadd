/*
* generated by Xtext
*/
grammar InternalGen;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.euclideanspace.xgener.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.euclideanspace.xgener.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.euclideanspace.xgener.services.GenGrammarAccess;

}

@parser::members {

 	private GenGrammarAccess grammarAccess;
 	
    public InternalGenParser(TokenStream input, GenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected GenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getClasClassTypeParserRuleCall_0_0()); 
	    }
		lv_clas_0_0=ruleClassType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"clas",
        		lv_clas_0_0, 
        		"ClassType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getProcProcedureParserRuleCall_1_0()); 
	    }
		lv_proc_1_0=ruleProcedure		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"proc",
        		lv_proc_1_0, 
        		"Procedure");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPrimPrimaryParserRuleCall_2_0()); 
	    }
		lv_prim_2_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"prim",
        		lv_prim_2_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getLitLiteralParserRuleCall_3_0()); 
	    }
		lv_lit_3_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"lit",
        		lv_lit_3_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getExpExpressionParserRuleCall_4_0()); 
	    }
		lv_exp_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*
;





// Entry rule entryRuleClassType
entryRuleClassType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassTypeRule()); }
	 iv_ruleClassType=ruleClassType 
	 { $current=$iv_ruleClassType.current; } 
	 EOF 
;

// Rule ClassType
ruleClassType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CLASS' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassTypeAccess().getCLASSKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getClassTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((
(
		lv_noclass_2_0=	'NOCLASS' 
    {
        newLeafNode(lv_noclass_2_0, grammarAccess.getClassTypeAccess().getNoclassNOCLASSKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassTypeRule());
	        }
       		addWithLastConsumed($current, "noclass", lv_noclass_2_0, "NOCLASS");
	    }

)
)
    |(	otherlv_3='PREFIX' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassTypeAccess().getPREFIXKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassTypeAccess().getPrefixMultStringParserRuleCall_2_1_1_0()); 
	    }
		lv_prefix_4_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassTypeRule());
	        }
       		add(
       			$current, 
       			"prefix",
        		lv_prefix_4_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_5='SUFFIX' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClassTypeAccess().getSUFFIXKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassTypeAccess().getSuffixMultStringParserRuleCall_2_2_1_0()); 
	    }
		lv_suffix_6_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassTypeRule());
	        }
       		add(
       			$current, 
       			"suffix",
        		lv_suffix_6_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_7='BLOCKING' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClassTypeAccess().getBLOCKINGKeyword_2_3_0());
    }
(
(
(
		lv_blocking_8_1=	'BRACES' 
    {
        newLeafNode(lv_blocking_8_1, grammarAccess.getClassTypeAccess().getBlockingBRACESKeyword_2_3_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassTypeRule());
	        }
       		addWithLastConsumed($current, "blocking", lv_blocking_8_1, null);
	    }

    |		lv_blocking_8_2=	'INDENT' 
    {
        newLeafNode(lv_blocking_8_2, grammarAccess.getClassTypeAccess().getBlockingINDENTKeyword_2_3_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassTypeRule());
	        }
       		addWithLastConsumed($current, "blocking", lv_blocking_8_2, null);
	    }

)

)
)))*)
;





// Entry rule entryRuleProcedure
entryRuleProcedure returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcedureRule()); }
	 iv_ruleProcedure=ruleProcedure 
	 { $current=$iv_ruleProcedure.current; } 
	 EOF 
;

// Rule Procedure
ruleProcedure returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PROCEDURE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcedureAccess().getPROCEDUREKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((	otherlv_2='PREFIX' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcedureAccess().getPREFIXKeyword_2_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedureAccess().getPrefixMultStringParserRuleCall_2_0_1_0()); 
	    }
		lv_prefix_3_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedureRule());
	        }
       		add(
       			$current, 
       			"prefix",
        		lv_prefix_3_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='SUFFIX' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProcedureAccess().getSUFFIXKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcedureAccess().getSuffixMultStringParserRuleCall_2_1_1_0()); 
	    }
		lv_suffix_5_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcedureRule());
	        }
       		add(
       			$current, 
       			"suffix",
        		lv_suffix_5_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_6='TYPES' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProcedureAccess().getTYPESKeyword_2_2_0());
    }
(
(
(
		lv_types_7_1=	'COLONSEPERATED' 
    {
        newLeafNode(lv_types_7_1, grammarAccess.getProcedureAccess().getTypesCOLONSEPERATEDKeyword_2_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		addWithLastConsumed($current, "types", lv_types_7_1, null);
	    }

    |		lv_types_7_2=	'SPACESEPERATED' 
    {
        newLeafNode(lv_types_7_2, grammarAccess.getProcedureAccess().getTypesSPACESEPERATEDKeyword_2_2_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		addWithLastConsumed($current, "types", lv_types_7_2, null);
	    }

    |		lv_types_7_3=	'INHEADER' 
    {
        newLeafNode(lv_types_7_3, grammarAccess.getProcedureAccess().getTypesINHEADERKeyword_2_2_1_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		addWithLastConsumed($current, "types", lv_types_7_3, null);
	    }

    |		lv_types_7_4=	'INFERRED' 
    {
        newLeafNode(lv_types_7_4, grammarAccess.getProcedureAccess().getTypesINFERREDKeyword_2_2_1_0_3());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		addWithLastConsumed($current, "types", lv_types_7_4, null);
	    }

    |		lv_types_7_5=	'UNTYPED' 
    {
        newLeafNode(lv_types_7_5, grammarAccess.getProcedureAccess().getTypesUNTYPEDKeyword_2_2_1_0_4());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProcedureRule());
	        }
       		addWithLastConsumed($current, "types", lv_types_7_5, null);
	    }

)

)
)))*)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EXPRESSION' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpressionAccess().getEXPRESSIONKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExpressionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getPrecPrecedenceParserRuleCall_2_0()); 
	    }
		lv_prec_2_0=rulePrecedence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"prec",
        		lv_prec_2_0, 
        		"Precedence");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePrecedence
entryRulePrecedence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrecedenceRule()); }
	 iv_rulePrecedence=rulePrecedence 
	 { $current=$iv_rulePrecedence.current; } 
	 EOF 
;

// Rule Precedence
rulePrecedence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_ruletyp_0_0=	'CALLER' 
    {
        newLeafNode(lv_ruletyp_0_0, grammarAccess.getPrecedenceAccess().getRuletypCALLERKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_0_0, "CALLER");
	    }

)
)(
(
		lv_rule_1_0=RULE_ID
		{
			newLeafNode(lv_rule_1_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrecedenceAccess().getFullStopKeyword_0_2_0());
    }
(
(
		lv_feature1_3_0=RULE_ID
		{
			newLeafNode(lv_feature1_3_0, grammarAccess.getPrecedenceAccess().getFeature1IDTerminalRuleCall_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_3_0, 
        		"ID");
	    }

)
))?)
    |((
(
		lv_ruletyp_4_0=	'PREFIX' 
    {
        newLeafNode(lv_ruletyp_4_0, grammarAccess.getPrecedenceAccess().getRuletypPREFIXKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_4_0, "PREFIX");
	    }

)
)(
(
		lv_rule_5_0=RULE_ID
		{
			newLeafNode(lv_rule_5_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_5_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getPrefixMultStringParserRuleCall_1_2_0()); 
	    }
		lv_prefix_6_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		set(
       			$current, 
       			"prefix",
        		lv_prefix_6_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_feature1_7_0=RULE_ID
		{
			newLeafNode(lv_feature1_7_0, grammarAccess.getPrecedenceAccess().getFeature1IDTerminalRuleCall_1_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_7_0, 
        		"ID");
	    }

)
)	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_1_3_1());
    }
)?(
(
		lv_par1_9_0=RULE_ID
		{
			newLeafNode(lv_par1_9_0, grammarAccess.getPrecedenceAccess().getPar1IDTerminalRuleCall_1_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par1",
        		lv_par1_9_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_10_0=	'SUFFIX' 
    {
        newLeafNode(lv_ruletyp_10_0, grammarAccess.getPrecedenceAccess().getRuletypSUFFIXKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_10_0, "SUFFIX");
	    }

)
)(
(
		lv_rule_11_0=RULE_ID
		{
			newLeafNode(lv_rule_11_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_11_0, 
        		"ID");
	    }

)
)((
(
		lv_feature1_12_0=RULE_ID
		{
			newLeafNode(lv_feature1_12_0, grammarAccess.getPrecedenceAccess().getFeature1IDTerminalRuleCall_2_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_12_0, 
        		"ID");
	    }

)
)	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_2_2_1());
    }
)?(
(
		lv_par1_14_0=RULE_ID
		{
			newLeafNode(lv_par1_14_0, grammarAccess.getPrecedenceAccess().getPar1IDTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par1",
        		lv_par1_14_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getSuffixMultStringParserRuleCall_2_4_0()); 
	    }
		lv_suffix_15_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_15_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_ruletyp_16_0=	'INFIX' 
    {
        newLeafNode(lv_ruletyp_16_0, grammarAccess.getPrecedenceAccess().getRuletypINFIXKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_16_0, "INFIX");
	    }

)
)(
(
		lv_rule_17_0=RULE_ID
		{
			newLeafNode(lv_rule_17_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_17_0, 
        		"ID");
	    }

)
)((
(
		lv_feature1_18_0=RULE_ID
		{
			newLeafNode(lv_feature1_18_0, grammarAccess.getPrecedenceAccess().getFeature1IDTerminalRuleCall_3_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_18_0, 
        		"ID");
	    }

)
)	otherlv_19='=' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_3_2_1());
    }
)?(
(
		lv_par1_20_0=RULE_ID
		{
			newLeafNode(lv_par1_20_0, grammarAccess.getPrecedenceAccess().getPar1IDTerminalRuleCall_3_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par1",
        		lv_par1_20_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getInfixMultStringParserRuleCall_3_4_0()); 
	    }
		lv_infix_21_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		set(
       			$current, 
       			"infix",
        		lv_infix_21_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_feature2_22_0=RULE_ID
		{
			newLeafNode(lv_feature2_22_0, grammarAccess.getPrecedenceAccess().getFeature2IDTerminalRuleCall_3_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature2",
        		lv_feature2_22_0, 
        		"ID");
	    }

)
)	otherlv_23='=' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_3_5_1());
    }
)?(
(
		lv_par2_24_0=RULE_ID
		{
			newLeafNode(lv_par2_24_0, grammarAccess.getPrecedenceAccess().getPar2IDTerminalRuleCall_3_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par2",
        		lv_par2_24_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_25_0=	'INFIXLEFT' 
    {
        newLeafNode(lv_ruletyp_25_0, grammarAccess.getPrecedenceAccess().getRuletypINFIXLEFTKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_25_0, "INFIXLEFT");
	    }

)
)(
(
		lv_rule_26_0=RULE_ID
		{
			newLeafNode(lv_rule_26_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_26_0, 
        		"ID");
	    }

)
)((
(
		lv_feature1_27_0=RULE_ID
		{
			newLeafNode(lv_feature1_27_0, grammarAccess.getPrecedenceAccess().getFeature1IDTerminalRuleCall_4_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_27_0, 
        		"ID");
	    }

)
)	otherlv_28='=' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_4_2_1());
    }
)?(
(
		lv_par1_29_0=RULE_ID
		{
			newLeafNode(lv_par1_29_0, grammarAccess.getPrecedenceAccess().getPar1IDTerminalRuleCall_4_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par1",
        		lv_par1_29_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getInfixMultStringParserRuleCall_4_4_0()); 
	    }
		lv_infix_30_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		set(
       			$current, 
       			"infix",
        		lv_infix_30_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_feature2_31_0=RULE_ID
		{
			newLeafNode(lv_feature2_31_0, grammarAccess.getPrecedenceAccess().getFeature2IDTerminalRuleCall_4_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature2",
        		lv_feature2_31_0, 
        		"ID");
	    }

)
)	otherlv_32='=' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_4_5_1());
    }
)?(
(
		lv_par2_33_0=RULE_ID
		{
			newLeafNode(lv_par2_33_0, grammarAccess.getPrecedenceAccess().getPar2IDTerminalRuleCall_4_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par2",
        		lv_par2_33_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_34_0=	'OUTER' 
    {
        newLeafNode(lv_ruletyp_34_0, grammarAccess.getPrecedenceAccess().getRuletypOUTERKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_34_0, "OUTER");
	    }

)
)(
(
		lv_rule_35_0=RULE_ID
		{
			newLeafNode(lv_rule_35_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_35_0, 
        		"ID");
	    }

)
)((
(
		lv_feature1_36_0=RULE_ID
		{
			newLeafNode(lv_feature1_36_0, grammarAccess.getPrecedenceAccess().getFeature1IDTerminalRuleCall_5_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_36_0, 
        		"ID");
	    }

)
)	otherlv_37='=' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_5_2_1());
    }
)?(
(
		lv_par1_38_0=RULE_ID
		{
			newLeafNode(lv_par1_38_0, grammarAccess.getPrecedenceAccess().getPar1IDTerminalRuleCall_5_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par1",
        		lv_par1_38_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getInnerInnerPrecedenceParserRuleCall_5_4_0()); 
	    }
		lv_inner_39_0=ruleInnerPrecedence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		add(
       			$current, 
       			"inner",
        		lv_inner_39_0, 
        		"InnerPrecedence");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
    |((
(
		lv_ruletyp_40_0=	'BRACKET' 
    {
        newLeafNode(lv_ruletyp_40_0, grammarAccess.getPrecedenceAccess().getRuletypBRACKETKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_40_0, "BRACKET");
	    }

)
)(
(
		lv_rule_41_0=RULE_ID
		{
			newLeafNode(lv_rule_41_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_41_0, 
        		"ID");
	    }

)
)(
(
		lv_bracket_42_0=RULE_ID
		{
			newLeafNode(lv_bracket_42_0, grammarAccess.getPrecedenceAccess().getBracketIDTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bracket",
        		lv_bracket_42_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_43_0=	'BRACES' 
    {
        newLeafNode(lv_ruletyp_43_0, grammarAccess.getPrecedenceAccess().getRuletypBRACESKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_43_0, "BRACES");
	    }

)
)(
(
		lv_rule_44_0=RULE_ID
		{
			newLeafNode(lv_rule_44_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_44_0, 
        		"ID");
	    }

)
)(
(
		lv_braces_45_0=RULE_ID
		{
			newLeafNode(lv_braces_45_0, grammarAccess.getPrecedenceAccess().getBracesIDTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"braces",
        		lv_braces_45_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_46_0=	'PARENTHESIS' 
    {
        newLeafNode(lv_ruletyp_46_0, grammarAccess.getPrecedenceAccess().getRuletypPARENTHESISKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_46_0, "PARENTHESIS");
	    }

)
)(
(
		lv_rule_47_0=RULE_ID
		{
			newLeafNode(lv_rule_47_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_47_0, 
        		"ID");
	    }

)
)(
(
		lv_parenthesis_48_0=RULE_ID
		{
			newLeafNode(lv_parenthesis_48_0, grammarAccess.getPrecedenceAccess().getParenthesisIDTerminalRuleCall_8_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parenthesis",
        		lv_parenthesis_48_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_49_0=	'ANGLE' 
    {
        newLeafNode(lv_ruletyp_49_0, grammarAccess.getPrecedenceAccess().getRuletypANGLEKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_49_0, "ANGLE");
	    }

)
)(
(
		lv_rule_50_0=RULE_ID
		{
			newLeafNode(lv_rule_50_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_50_0, 
        		"ID");
	    }

)
)(
(
		lv_angle_51_0=RULE_ID
		{
			newLeafNode(lv_angle_51_0, grammarAccess.getPrecedenceAccess().getAngleIDTerminalRuleCall_9_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"angle",
        		lv_angle_51_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_52_0=	'MEMBERFEATURE' 
    {
        newLeafNode(lv_ruletyp_52_0, grammarAccess.getPrecedenceAccess().getRuletypMEMBERFEATUREKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_52_0, "MEMBERFEATURE");
	    }

)
)(
(
		lv_rule_53_0=RULE_ID
		{
			newLeafNode(lv_rule_53_0, grammarAccess.getPrecedenceAccess().getRuleIDTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_53_0, 
        		"ID");
	    }

)
)((
(
		lv_feature1_54_0=RULE_ID
		{
			newLeafNode(lv_feature1_54_0, grammarAccess.getPrecedenceAccess().getFeature1IDTerminalRuleCall_10_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_54_0, 
        		"ID");
	    }

)
)	otherlv_55='=' 
    {
    	newLeafNode(otherlv_55, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_10_2_1());
    }
)?(
(
		lv_par1_56_0=RULE_ID
		{
			newLeafNode(lv_par1_56_0, grammarAccess.getPrecedenceAccess().getPar1IDTerminalRuleCall_10_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par1",
        		lv_par1_56_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrecedenceAccess().getInfixMultStringParserRuleCall_10_4_0()); 
	    }
		lv_infix_57_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrecedenceRule());
	        }
       		set(
       			$current, 
       			"infix",
        		lv_infix_57_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_feature2_58_0=RULE_ID
		{
			newLeafNode(lv_feature2_58_0, grammarAccess.getPrecedenceAccess().getFeature2IDTerminalRuleCall_10_5_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature2",
        		lv_feature2_58_0, 
        		"ID");
	    }

)
)	otherlv_59='=' 
    {
    	newLeafNode(otherlv_59, grammarAccess.getPrecedenceAccess().getEqualsSignKeyword_10_5_1());
    }
)?(
(
		lv_par2_60_0=RULE_ID
		{
			newLeafNode(lv_par2_60_0, grammarAccess.getPrecedenceAccess().getPar2IDTerminalRuleCall_10_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par2",
        		lv_par2_60_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleInnerPrecedence
entryRuleInnerPrecedence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInnerPrecedenceRule()); }
	 iv_ruleInnerPrecedence=ruleInnerPrecedence 
	 { $current=$iv_ruleInnerPrecedence.current; } 
	 EOF 
;

// Rule InnerPrecedence
ruleInnerPrecedence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_ruletyp_0_0=	'INNERPREFIX' 
    {
        newLeafNode(lv_ruletyp_0_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERPREFIXKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_0_0, "INNERPREFIX");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInnerPrecedenceAccess().getPrefixMultStringParserRuleCall_0_1_0()); 
	    }
		lv_prefix_1_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInnerPrecedenceRule());
	        }
       		set(
       			$current, 
       			"prefix",
        		lv_prefix_1_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_feature1_2_0=RULE_ID
		{
			newLeafNode(lv_feature1_2_0, grammarAccess.getInnerPrecedenceAccess().getFeature1IDTerminalRuleCall_0_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_2_0, 
        		"ID");
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInnerPrecedenceAccess().getEqualsSignKeyword_0_2_1());
    }
)?(
(
		lv_par2_4_0=RULE_ID
		{
			newLeafNode(lv_par2_4_0, grammarAccess.getInnerPrecedenceAccess().getPar2IDTerminalRuleCall_0_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par2",
        		lv_par2_4_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_5_0=	'INNERSUFFIX' 
    {
        newLeafNode(lv_ruletyp_5_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERSUFFIXKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_5_0, "INNERSUFFIX");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInnerPrecedenceAccess().getSuffixMultStringParserRuleCall_1_1_0()); 
	    }
		lv_suffix_6_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInnerPrecedenceRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_6_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_ruletyp_7_0=	'INNERINFIX' 
    {
        newLeafNode(lv_ruletyp_7_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERINFIXKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_7_0, "INNERINFIX");
	    }

)
)((
(
		lv_mod_8_0=	'CALLER' 
    {
        newLeafNode(lv_mod_8_0, grammarAccess.getInnerPrecedenceAccess().getModCALLERKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "mod", lv_mod_8_0, "CALLER");
	    }

)
)(
(
		lv_rule_9_0=RULE_ID
		{
			newLeafNode(lv_rule_9_0, grammarAccess.getInnerPrecedenceAccess().getRuleIDTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_9_0, 
        		"ID");
	    }

)
)(	otherlv_10='.' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInnerPrecedenceAccess().getFullStopKeyword_2_1_2_0());
    }
(
(
		lv_feature1_11_0=RULE_ID
		{
			newLeafNode(lv_feature1_11_0, grammarAccess.getInnerPrecedenceAccess().getFeature1IDTerminalRuleCall_2_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_11_0, 
        		"ID");
	    }

)
))?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInnerPrecedenceAccess().getInfixMultStringParserRuleCall_2_2_0()); 
	    }
		lv_infix_12_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInnerPrecedenceRule());
	        }
       		set(
       			$current, 
       			"infix",
        		lv_infix_12_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_feature2_13_0=RULE_ID
		{
			newLeafNode(lv_feature2_13_0, grammarAccess.getInnerPrecedenceAccess().getFeature2IDTerminalRuleCall_2_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature2",
        		lv_feature2_13_0, 
        		"ID");
	    }

)
)	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getInnerPrecedenceAccess().getEqualsSignKeyword_2_3_1());
    }
)?(
(
		lv_par2_15_0=RULE_ID
		{
			newLeafNode(lv_par2_15_0, grammarAccess.getInnerPrecedenceAccess().getPar2IDTerminalRuleCall_2_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par2",
        		lv_par2_15_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_16_0=	'INNERINFIXLEFT' 
    {
        newLeafNode(lv_ruletyp_16_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERINFIXLEFTKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_16_0, "INNERINFIXLEFT");
	    }

)
)((
(
		lv_mod_17_0=	'CALLER' 
    {
        newLeafNode(lv_mod_17_0, grammarAccess.getInnerPrecedenceAccess().getModCALLERKeyword_3_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "mod", lv_mod_17_0, "CALLER");
	    }

)
)(
(
		lv_rule_18_0=RULE_ID
		{
			newLeafNode(lv_rule_18_0, grammarAccess.getInnerPrecedenceAccess().getRuleIDTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_18_0, 
        		"ID");
	    }

)
)(	otherlv_19='.' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getInnerPrecedenceAccess().getFullStopKeyword_3_1_2_0());
    }
(
(
		lv_feature1_20_0=RULE_ID
		{
			newLeafNode(lv_feature1_20_0, grammarAccess.getInnerPrecedenceAccess().getFeature1IDTerminalRuleCall_3_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature1",
        		lv_feature1_20_0, 
        		"ID");
	    }

)
))?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInnerPrecedenceAccess().getInfixMultStringParserRuleCall_3_2_0()); 
	    }
		lv_infix_21_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInnerPrecedenceRule());
	        }
       		set(
       			$current, 
       			"infix",
        		lv_infix_21_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_feature2_22_0=RULE_ID
		{
			newLeafNode(lv_feature2_22_0, grammarAccess.getInnerPrecedenceAccess().getFeature2IDTerminalRuleCall_3_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"feature2",
        		lv_feature2_22_0, 
        		"ID");
	    }

)
)	otherlv_23='=' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getInnerPrecedenceAccess().getEqualsSignKeyword_3_3_1());
    }
)?(
(
		lv_par2_24_0=RULE_ID
		{
			newLeafNode(lv_par2_24_0, grammarAccess.getInnerPrecedenceAccess().getPar2IDTerminalRuleCall_3_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"par2",
        		lv_par2_24_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_25_0=	'INNERBRACKET' 
    {
        newLeafNode(lv_ruletyp_25_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERBRACKETKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_25_0, "INNERBRACKET");
	    }

)
)(
(
		lv_rule_26_0=RULE_ID
		{
			newLeafNode(lv_rule_26_0, grammarAccess.getInnerPrecedenceAccess().getRuleIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_26_0, 
        		"ID");
	    }

)
)(
(
		lv_bracket_27_0=RULE_ID
		{
			newLeafNode(lv_bracket_27_0, grammarAccess.getInnerPrecedenceAccess().getBracketIDTerminalRuleCall_4_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bracket",
        		lv_bracket_27_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_28_0=	'INNERBRACES' 
    {
        newLeafNode(lv_ruletyp_28_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERBRACESKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_28_0, "INNERBRACES");
	    }

)
)(
(
		lv_rule_29_0=RULE_ID
		{
			newLeafNode(lv_rule_29_0, grammarAccess.getInnerPrecedenceAccess().getRuleIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_29_0, 
        		"ID");
	    }

)
)(
(
		lv_braces_30_0=RULE_ID
		{
			newLeafNode(lv_braces_30_0, grammarAccess.getInnerPrecedenceAccess().getBracesIDTerminalRuleCall_5_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"braces",
        		lv_braces_30_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_31_0=	'INNERPARENTHESIS' 
    {
        newLeafNode(lv_ruletyp_31_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERPARENTHESISKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_31_0, "INNERPARENTHESIS");
	    }

)
)(
(
		lv_rule_32_0=RULE_ID
		{
			newLeafNode(lv_rule_32_0, grammarAccess.getInnerPrecedenceAccess().getRuleIDTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_32_0, 
        		"ID");
	    }

)
)(
(
		lv_parenthesis_33_0=RULE_ID
		{
			newLeafNode(lv_parenthesis_33_0, grammarAccess.getInnerPrecedenceAccess().getParenthesisIDTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parenthesis",
        		lv_parenthesis_33_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_ruletyp_34_0=	'INNERANGLE' 
    {
        newLeafNode(lv_ruletyp_34_0, grammarAccess.getInnerPrecedenceAccess().getRuletypINNERANGLEKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed($current, "ruletyp", lv_ruletyp_34_0, "INNERANGLE");
	    }

)
)(
(
		lv_rule_35_0=RULE_ID
		{
			newLeafNode(lv_rule_35_0, grammarAccess.getInnerPrecedenceAccess().getRuleIDTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rule",
        		lv_rule_35_0, 
        		"ID");
	    }

)
)(
(
		lv_angle_36_0=RULE_ID
		{
			newLeafNode(lv_angle_36_0, grammarAccess.getInnerPrecedenceAccess().getAngleIDTerminalRuleCall_7_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInnerPrecedenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"angle",
        		lv_angle_36_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleMultString
entryRuleMultString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultStringRule()); }
	 iv_ruleMultString=ruleMultString 
	 { $current=$iv_ruleMultString.current; } 
	 EOF 
;

// Rule MultString
ruleMultString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMultStringAccess().getMultStringAction_0(),
            $current);
    }
)((
(
		lv_ms_1_0=RULE_STRING
		{
			newLeafNode(lv_ms_1_0, grammarAccess.getMultStringAccess().getMsSTRINGTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultStringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ms",
        		lv_ms_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_mi_2_0=RULE_ID
		{
			newLeafNode(lv_mi_2_0, grammarAccess.getMultStringAccess().getMiIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultStringRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mi",
        		lv_mi_2_0, 
        		"ID");
	    }

)
)
    |((
(
		lv_synpred_3_0=	'=>' 
    {
        newLeafNode(lv_synpred_3_0, grammarAccess.getMultStringAccess().getSynpredEqualsSignGreaterThanSignKeyword_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultStringRule());
	        }
       		setWithLastConsumed($current, "synpred", lv_synpred_3_0, "=>");
	    }

)
)?	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultStringAccess().getLeftParenthesisKeyword_1_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultStringAccess().getCsComboStringParserRuleCall_1_2_2_0()); 
	    }
		lv_cs_5_0=ruleComboString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultStringRule());
	        }
       		add(
       			$current, 
       			"cs",
        		lv_cs_5_0, 
        		"ComboString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6='|' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMultStringAccess().getVerticalLineKeyword_1_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultStringAccess().getCsComboStringParserRuleCall_1_2_3_1_0()); 
	    }
		lv_cs_7_0=ruleComboString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultStringRule());
	        }
       		add(
       			$current, 
       			"cs",
        		lv_cs_7_0, 
        		"ComboString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMultStringAccess().getRightParenthesisKeyword_1_2_4());
    }
)))
;





// Entry rule entryRuleComboString
entryRuleComboString returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComboStringRule()); }
	 iv_ruleComboString=ruleComboString 
	 { $current=$iv_ruleComboString.current; } 
	 EOF 
;

// Rule ComboString
ruleComboString returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getComboStringAccess().getComboStringAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getComboStringAccess().getInnerMultStringParserRuleCall_1_0()); 
	    }
		lv_inner_1_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComboStringRule());
	        }
       		add(
       			$current, 
       			"inner",
        		lv_inner_1_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_rulePrimary=rulePrimary 
	 { $current=$iv_rulePrimary.current; } 
	 EOF 
;

// Rule Primary
rulePrimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PRIMARY' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getPRIMARYKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPrimaryAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryAccess().getInnerPrimaryInnerParserRuleCall_2_0()); 
	    }
		lv_inner_2_0=rulePrimaryInner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryRule());
	        }
       		add(
       			$current, 
       			"inner",
        		lv_inner_2_0, 
        		"PrimaryInner");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePrimaryInner
entryRulePrimaryInner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryInnerRule()); }
	 iv_rulePrimaryInner=rulePrimaryInner 
	 { $current=$iv_rulePrimaryInner.current; } 
	 EOF 
;

// Rule PrimaryInner
rulePrimaryInner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_primarytyp_0_0=	'CONSTRUCTOR' 
    {
        newLeafNode(lv_primarytyp_0_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypCONSTRUCTORKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_0_0, "CONSTRUCTOR");
	    }

)
)(
(
		lv_construct_1_0=RULE_ID
		{
			newLeafNode(lv_construct_1_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_1_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_2_0=	'BLOCK' 
    {
        newLeafNode(lv_primarytyp_2_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypBLOCKKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_2_0, "BLOCK");
	    }

)
)(
(
		lv_construct_3_0=RULE_ID
		{
			newLeafNode(lv_construct_3_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_3_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_4_0=	'SWITCH' 
    {
        newLeafNode(lv_primarytyp_4_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypSWITCHKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_4_0, "SWITCH");
	    }

)
)(
(
		lv_construct_5_0=RULE_ID
		{
			newLeafNode(lv_construct_5_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_5_0, 
        		"ID");
	    }

)
)(
(
		lv_construct2_6_0=RULE_ID
		{
			newLeafNode(lv_construct2_6_0, grammarAccess.getPrimaryInnerAccess().getConstruct2IDTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct2",
        		lv_construct2_6_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_7_0=	'SYNCHRONIZED' 
    {
        newLeafNode(lv_primarytyp_7_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypSYNCHRONIZEDKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_7_0, "SYNCHRONIZED");
	    }

)
)(
(
		lv_construct_8_0=RULE_ID
		{
			newLeafNode(lv_construct_8_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_8_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_9_0=	'FEATURECALL' 
    {
        newLeafNode(lv_primarytyp_9_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypFEATURECALLKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_9_0, "FEATURECALL");
	    }

)
)(
(
		lv_construct_10_0=RULE_ID
		{
			newLeafNode(lv_construct_10_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_10_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryInnerAccess().getFeatureMultStringParserRuleCall_4_2_0()); 
	    }
		lv_feature_11_0=ruleMultString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryInnerRule());
	        }
       		set(
       			$current, 
       			"feature",
        		lv_feature_11_0, 
        		"MultString");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_primarytyp_12_0=	'IFEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_12_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypIFEXPRESSIONKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_12_0, "IFEXPRESSION");
	    }

)
)(
(
		lv_construct_13_0=RULE_ID
		{
			newLeafNode(lv_construct_13_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_13_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_14_0=	'FOREXPRESSION' 
    {
        newLeafNode(lv_primarytyp_14_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypFOREXPRESSIONKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_14_0, "FOREXPRESSION");
	    }

)
)(
(
		lv_construct_15_0=RULE_ID
		{
			newLeafNode(lv_construct_15_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_15_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_16_0=	'BASICFORLOOPEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_16_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypBASICFORLOOPEXPRESSIONKeyword_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_16_0, "BASICFORLOOPEXPRESSION");
	    }

)
)(
(
		lv_construct_17_0=RULE_ID
		{
			newLeafNode(lv_construct_17_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_17_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_18_0=	'WHILEEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_18_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypWHILEEXPRESSIONKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_18_0, "WHILEEXPRESSION");
	    }

)
)(
(
		lv_construct_19_0=RULE_ID
		{
			newLeafNode(lv_construct_19_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_8_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_19_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_20_0=	'DOWHILEEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_20_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypDOWHILEEXPRESSIONKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_20_0, "DOWHILEEXPRESSION");
	    }

)
)(
(
		lv_construct_21_0=RULE_ID
		{
			newLeafNode(lv_construct_21_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_9_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_21_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_22_0=	'THROWEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_22_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypTHROWEXPRESSIONKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_22_0, "THROWEXPRESSION");
	    }

)
)(
(
		lv_construct_23_0=RULE_ID
		{
			newLeafNode(lv_construct_23_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_10_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_23_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_24_0=	'RETURNEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_24_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypRETURNEXPRESSIONKeyword_11_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_24_0, "RETURNEXPRESSION");
	    }

)
)(
(
		lv_construct_25_0=RULE_ID
		{
			newLeafNode(lv_construct_25_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_11_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_25_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_26_0=	'TRYCATCHFINALYEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_26_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypTRYCATCHFINALYEXPRESSIONKeyword_12_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_26_0, "TRYCATCHFINALYEXPRESSION");
	    }

)
)(
(
		lv_construct_27_0=RULE_ID
		{
			newLeafNode(lv_construct_27_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_12_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_27_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_28_0=	'PARENTHESIZEDEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_28_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypPARENTHESIZEDEXPRESSIONKeyword_13_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_28_0, "PARENTHESIZEDEXPRESSION");
	    }

)
)(
(
		lv_construct_29_0=RULE_ID
		{
			newLeafNode(lv_construct_29_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_13_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_29_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_30_0=	'LITERALEXPRESSION' 
    {
        newLeafNode(lv_primarytyp_30_0, grammarAccess.getPrimaryInnerAccess().getPrimarytypLITERALEXPRESSIONKeyword_14_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_30_0, "LITERALEXPRESSION");
	    }

)
)(
(
		lv_construct_31_0=RULE_ID
		{
			newLeafNode(lv_construct_31_0, grammarAccess.getPrimaryInnerAccess().getConstructIDTerminalRuleCall_14_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_31_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LITERAL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLiteralAccess().getLITERALKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLiteralAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLiteralAccess().getInnerLiteralInnerParserRuleCall_2_0()); 
	    }
		lv_inner_2_0=ruleLiteralInner		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLiteralRule());
	        }
       		add(
       			$current, 
       			"inner",
        		lv_inner_2_0, 
        		"LiteralInner");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleLiteralInner
entryRuleLiteralInner returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralInnerRule()); }
	 iv_ruleLiteralInner=ruleLiteralInner 
	 { $current=$iv_ruleLiteralInner.current; } 
	 EOF 
;

// Rule LiteralInner
ruleLiteralInner returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_primarytyp_0_0=	'COLLECTIONLITERAL' 
    {
        newLeafNode(lv_primarytyp_0_0, grammarAccess.getLiteralInnerAccess().getPrimarytypCOLLECTIONLITERALKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_0_0, "COLLECTIONLITERAL");
	    }

)
)(
(
		lv_construct_1_0=RULE_ID
		{
			newLeafNode(lv_construct_1_0, grammarAccess.getLiteralInnerAccess().getConstructIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_1_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_2_0=	'CLOSURE' 
    {
        newLeafNode(lv_primarytyp_2_0, grammarAccess.getLiteralInnerAccess().getPrimarytypCLOSUREKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_2_0, "CLOSURE");
	    }

)
)(
(
		lv_construct_3_0=RULE_ID
		{
			newLeafNode(lv_construct_3_0, grammarAccess.getLiteralInnerAccess().getConstructIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_3_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_4_0=	'BOOLEANLITERAL' 
    {
        newLeafNode(lv_primarytyp_4_0, grammarAccess.getLiteralInnerAccess().getPrimarytypBOOLEANLITERALKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_4_0, "BOOLEANLITERAL");
	    }

)
)(
(
		lv_construct_5_0=RULE_ID
		{
			newLeafNode(lv_construct_5_0, grammarAccess.getLiteralInnerAccess().getConstructIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_5_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_6_0=	'NUMBERLITERAL' 
    {
        newLeafNode(lv_primarytyp_6_0, grammarAccess.getLiteralInnerAccess().getPrimarytypNUMBERLITERALKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_6_0, "NUMBERLITERAL");
	    }

)
)(
(
		lv_construct_7_0=RULE_ID
		{
			newLeafNode(lv_construct_7_0, grammarAccess.getLiteralInnerAccess().getConstructIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_7_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_8_0=	'NULLLITERAL' 
    {
        newLeafNode(lv_primarytyp_8_0, grammarAccess.getLiteralInnerAccess().getPrimarytypNULLLITERALKeyword_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_8_0, "NULLLITERAL");
	    }

)
)(
(
		lv_construct_9_0=RULE_ID
		{
			newLeafNode(lv_construct_9_0, grammarAccess.getLiteralInnerAccess().getConstructIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_9_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_10_0=	'STRINGLITERAL' 
    {
        newLeafNode(lv_primarytyp_10_0, grammarAccess.getLiteralInnerAccess().getPrimarytypSTRINGLITERALKeyword_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_10_0, "STRINGLITERAL");
	    }

)
)(
(
		lv_construct_11_0=RULE_ID
		{
			newLeafNode(lv_construct_11_0, grammarAccess.getLiteralInnerAccess().getConstructIDTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_11_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_primarytyp_12_0=	'TYPELITERAL' 
    {
        newLeafNode(lv_primarytyp_12_0, grammarAccess.getLiteralInnerAccess().getPrimarytypTYPELITERALKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed($current, "primarytyp", lv_primarytyp_12_0, "TYPELITERAL");
	    }

)
)(
(
		lv_construct_13_0=RULE_ID
		{
			newLeafNode(lv_construct_13_0, grammarAccess.getLiteralInnerAccess().getConstructIDTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralInnerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"construct",
        		lv_construct_13_0, 
        		"ID");
	    }

)
)))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


